apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: affine
  name: affine
  namespace: synergy
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      io.kompose.service: affine
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.34.0 (cbf2835db)
      creationTimestamp: null
      labels:
        io.kompose.service: affine
    spec:
      containers:
      - args:
        - sh
        - -c
        - node ./scripts/self-host-predeploy && node ./dist/index.js
        env:
        - name: AFFINE_ADMIN_EMAIL
        - name: AFFINE_ADMIN_PASSWORD
        - name: AFFINE_CONFIG_PATH
          value: /root/.affine/config
        - name: DATABASE_URL
          value: postgres://affine:affine@postgres:5432/affine
        - name: NODE_ENV
          value: production
        - name: NODE_OPTIONS
          value: '"--import=./scripts/register.js"'
        - name: REDIS_SERVER_HOST
          value: redis
        image: ghcr.io/toeverything/affine-graphql:stable
        imagePullPolicy: IfNotPresent
        name: affine-selfhosted
        ports:
        - containerPort: 3010
          protocol: TCP
        - containerPort: 5555
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /root/.affine/config
          name: affine-claim0
        - mountPath: /root/.affine/storage
          name: affine-claim1
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: affine-sa
      serviceAccountName: affine-sa
      terminationGracePeriodSeconds: 30
      volumes:
      - name: affine-claim0
        persistentVolumeClaim:
          claimName: affine-claim0
      - name: affine-claim1
        persistentVolumeClaim:
          claimName: affine-claim1

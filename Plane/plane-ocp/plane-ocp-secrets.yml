apiVersion: v1
items:
- apiVersion: v1
  data:
    .dockercfg: 
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: builder
      kubernetes.io/service-account.uid: eabead57-625d-4980-a026-fd7358a0e212
      openshift.io/token-secret.name: builder-token-dvvcq
      openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IlItMmtkWU82WlBpNC1FVXhNVzExTy1TTGRmVWxjYmZibmNCNHlOTmRLclkifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJwbGFuZS1hcHAiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiYnVpbGRlci10b2tlbi1kdnZjcSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJidWlsZGVyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiZWFiZWFkNTctNjI1ZC00OTgwLWEwMjYtZmQ3MzU4YTBlMjEyIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OnBsYW5lLWFwcDpidWlsZGVyIn0.ppt-ALnEwbxcZextMuphzhWDYkpalHzaDBU_4Mifk9LJY2WRJ1ZzY2Jyhjg0d8eiovzTl3PedOp1CFpnvsPMiygXhPdGQQe2yq3rt-3mcOm_-p4nYTdPybE3RrbGQL4g6KKk9yLgnbbzxvTdszLNalxLPqkGI15Yu-8ItA0FM-quLD9yn-NTe2uW-9hcPD18KpoMPjKweS_cK_dn3bPGZQIxO5smIr9r-buN5SXJpdwaolBPY1kjFVEKorr2vNNsCS6tkp18w5-Z7QfUflhYEWZUpiK_YEeAxU3XeFJMJpC9IgNzQkkBluPnkuHsRWx5LGMYCJI2G_Nf5c8KgLYWA96Kf8-X5yrH_WXpr3k8YTCpMDUm6FCtYi8__O7rxCD2aSw6fozvZfzX15kT7KRVPkv_BnYYTfnIPNwvBDPE9oIRERMmFNiSw9Yb2HSHc6hmdF86Tth8bvKIPJ6cCp_iQQ29WikS61x-NVYfVFpvRuxOfHJs9EgellbI-TY1IXeBSiMTW10MtKnoH1TZzHbvUZnhfSA-tFYvG0GrGcIAGkZRKGrEJXP906crUUMasecSLBhACiggyLuQTt_J65AtgbuC7aRS_Tt7w7ggRlESoG36_wPgbMR65b4PjbJ3KboSDH3w6NDXkQUlGkRD7kOwVzCJGsVltkKeyLIkBD8Xobo
    creationTimestamp: "2024-10-12T09:51:57Z"
    name: builder-dockercfg-dfpxr
    namespace: plane-app
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: builder-token-dvvcq
      uid: dc900d34-2d2e-4b03-9dad-0817b62a2885
    resourceVersion: "849429"
    uid: 0fbe5d15-70e5-4025-b916-eff37b710f3e
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: cGxhbmUtYXBw
    service-ca.crt: 
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklsSXRNbXRrV1U4MldsQnBOQzFGVlhoTlZ6RXhUeTFUVEdSbVZXeGpZbVppYm1OQ05IbE9UbVJMY2xraWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp3YkdGdVpTMWhjSEFpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pWW5WcGJHUmxjaTEwYjJ0bGJpMWtkblpqY1NJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKaWRXbHNaR1Z5SWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWRXbGtJam9pWldGaVpXRmtOVGN0TmpJMVpDMDBPVGd3TFdFd01qWXRabVEzTXpVNFlUQmxNakV5SWl3aWMzVmlJam9pYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1ME9uQnNZVzVsTFdGd2NEcGlkV2xzWkdWeUluMC5wcHQtQUxuRXdieGNaZXh0TXVwaHpoV0RZa3BhbEh6YURCVV80TWlmazlMSlkyV1JKMVp6WTJKeWhqZzBkOGVpb3Z6VGwzUGVkT3AxQ0ZwbnZzUE1peWdYaFBkR1FRZTJ5cTNydC0zbWNPbV8tcDRuWVRkUHliRTNScmJHUUw0ZzZLS2s5eUxnbmJienh2VGRzekxOYWx4TFBxa0dJMTVZdS04SXRBMEZNLXF1TEQ5eW4tTlRlMnVXLTloY1BEMThLcG9NUGpLd2VTX2NLX2RuM2JQR1pRSXhPNXNtSXI5ci1idU41U1hKcGR3YW9sQlBZMWtqRlZFS29ycjJ2Tk5zQ1M2dGtwMTh3NS1aN1FmVWZsaFlFV1pVcGlLX1lFZUF4VTNYZUZKTUpwQzlJZ056UWtrQmx1UG5rdUhzUld4NUxHTVlDSkkyR19OZjVjOEtnTFlXQTk2S2Y4LVg1eXJIX1dYcHIzazhZVENwTURVbTZGQ3RZaThfX083cnhDRDJhU3c2Zm96dlpmelgxNWtUN0tSVlBrdl9CbllZVGZuSVBOd3ZCRFBFOW9JUkVSTW1GTmlTdzlZYjJIU0hjNmhtZEY4NlR0aDhidktJUEo2Y0NwX2lRUTI5V2lrUzYxeC1OVllmVkZwdlJ1eE9mSEpzOUVnZWxsYkktVFkxSVhlQlNpTVRXMTBNdEtub0gxVFp6SGJ2VVpuaGZTQS10Rll2RzBHckdjSUFHa1pSS0dyRUpYUDkwNmNyVVVNYXNlY1NMQmhBQ2lnZ3lMdVFUdF9KNjVBdGdidUM3YVJTX1R0N3c3Z2dSbEVTb0czNl93UGdiTVI2NWI0UGpiSjNLYm9TREgzdzZORFhrUVVsR2tSRDdrT3dWekNKR3NWbHRrS2V5TElrQkQ4WG9ibw==
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: builder
      kubernetes.io/service-account.uid: eabead57-625d-4980-a026-fd7358a0e212
    creationTimestamp: "2024-10-12T09:51:57Z"
    name: builder-token-dvvcq
    namespace: plane-app
    resourceVersion: "849423"
    uid: dc900d34-2d2e-4b03-9dad-0817b62a2885
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    .dockercfg: eyIxNzIuMzAuMTE5LjE2ODo1MDAwIjp7InVzZXJuYW1lIjoic2VydmljZWFjY291bnQiLCJwYXNzd29yZCI6ImV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbEl0TW10a1dVODJXbEJwTkMxRlZYaE5WekV4VHkxVFRHUm1WV3hqWW1aaWJtTkNOSGxPVG1STGNsa2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKd2JHRnVaUzFoY0hBaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sWTNKbGRDNXVZVzFsSWpvaVpHVm1ZWFZzZEMxMGIydGxiaTA1Y1hCMk5pSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWeWRtbGpaUzFoWTJOdmRXNTBMbTVoYldVaU9pSmtaV1poZFd4MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WlhKMmFXTmxMV0ZqWTI5MWJuUXVkV2xrSWpvaVptVmlOVFl3T1RjdE5qSm1OUzAwTkdSaExXSm1PVFl0WlRka016RmlaREppWXpSbElpd2ljM1ZpSWpvaWMzbHpkR1Z0T25ObGNuWnBZMlZoWTJOdmRXNTBPbkJzWVc1bExXRndjRHBrWldaaGRXeDBJbjAuRHBCTXVkSEhjbnExRU0tZUdwMnBJTVc3UmFyVW52ZVRPalJIa3ZQUXRrSC1yVnpVbTVpMHFGcXFBb3A5ZzZ3RXlqbG5MZXhqcFJWVG4wTzB2eG5XTnpuV0tvTkNzbjdONlRqVGdpVnV0NUI1NUlsLTllLW80VFNiX3pwWTVoalJmcWhQcHExSGIzY3ZpQU8yZTZhSTNoTEtZZDgzN0kybURZVGRRa01pUEpyRktEc2Z6d2NLcGhHTjNPMjlyRWFGZEVIeXQtQW1CdFFnYng2dkhCcGY0dFhfRk9UYUNMNGNXSG41WjBKelhQTkx2c3diTm9TV3VOWU9CY3VxNFZfbGZ1ajlBdFN6aXNObldyWV9YMjVhZUxVZDRCSkx1WkNZSDZkZjJscDdWdHFta25qcGFYUFlzSkRFRUdfNHBPZllqVHJNSlY5OWRrVE4yRkpjMUdTQmtBZHlqRnFGV2sySl83bEYyckFDSTEyUW1MMnpQSV90eFBrUzdNeEQxQ0xQOEpvUnBsUEE0X3BLUE15RTU3NnBpNEdKTzBLekVXcWJLblR6VU5SbWR6Tnd5b2JzaF9wZlBPOFViN0Y3U1FKYXI2SW5RdTNvd0RfLVpTOFNzTkJvQlhYcjVMMXF3QzRwNEJnVFhNVVVtZlJLQS1QeGZfQmxRVWJYbEd2UkliM0liR1BRMWlHQ3I0WVJfYUlkc1A4TmVBeTNKRVBSY0x4ZjhPMHFoZ0FZWGctMWdYWHhUdm80TGk0SUtEN19oVGlUUlBtenlyQ2xKQi1tZkVOUXAxWVcxaVpGYkR2RnplRUlRR2Ffc0VNOVNNQVJGT2dXN2RVcDQtbFpDSnFVRmZOdHBGUHp0aXhGemZpZEVlaGUzSXoyNHNmLW1vVlRjdjVRbG52YUdwajV1QUkiLCJlbWFpbCI6InNlcnZpY2VhY2NvdW50QGV4YW1wbGUub3JnIiwiYXV0aCI6ImMyVnlkbWxqWldGalkyOTFiblE2WlhsS2FHSkhZMmxQYVVwVFZYcEpNVTVwU1hOSmJYUndXa05KTmtsc1NYUk5iWFJyVjFVNE1sZHNRbkJPUXpGR1ZsaG9UbFo2UlhoVWVURlVWRWRTYlZaWGVHcFpiVnBwWW0xT1EwNUliRTlVYlZKTVkyeHJhV1pSTG1WNVNuQmpNMDFwVDJsS2NtUlhTbXhqYlRWc1pFZFdla3d6VG14amJscHdXVEpXYUZreVRuWmtWelV3U1dsM2FXRXpWbWxhV0VwMVdsaFNiR041TlhCaWVUbDZXbGhLTW1GWFRteFpWMDVxWWpOV2RXUkRPWFZaVnpGc1l6TkNhRmt5VldsUGFVcDNZa2RHZFZwVE1XaGpTRUZwVEVOS2NtUlhTbXhqYlRWc1pFZFdla3h0YkhaTU0wNXNZMjVhY0ZreVZtaFpNazUyWkZjMU1Fd3pUbXhaTTBwc1pFTTFkVmxYTVd4SmFtOXBXa2RXYlZsWVZuTmtRekV3WWpKMGJHSnBNRFZqV0VJeVRtbEpjMGx0ZERGWmJWWjVZbTFXTUZwWVRYVmhWemgyWXpKV2VXUnRiR3BhVjBacVdUSTVNV0p1VVhaak1sWjVaRzFzYWxwVE1XaFpNazUyWkZjMU1FeHROV2hpVjFWcFQybEthMXBYV21oa1YzZ3dTV2wzYVdFelZtbGFXRXAxV2xoU2JHTjVOWEJpZVRsNldsaEtNbUZYVG14WlYwNXFZak5XZFdSRE9YcGFXRW95WVZkT2JFeFhSbXBaTWpreFltNVJkV1JYYkd0SmFtOXBXbTFXYVU1VVdYZFBWR04wVG1wS2JVNVRNREJPUjFKb1RGZEtiVTlVV1hSYVZHUnJUWHBHYVZwRVNtbFplbEpzU1dsM2FXTXpWbWxKYW05cFl6TnNlbVJIVm5SUGJrNXNZMjVhY0ZreVZtaFpNazUyWkZjMU1FOXVRbk5aVnpWc1RGZEdkMk5FY0d0YVYxcG9aRmQ0TUVsdU1DNUVjRUpOZFdSSVNHTnVjVEZGVFMxbFIzQXljRWxOVnpkU1lYSlZiblpsVkU5cVVraHJkbEJSZEd0SUxYSldlbFZ0Tldrd2NVWnhjVUZ2Y0Rsbk5uZEZlV3BzYmt4bGVHcHdVbFpVYmpCUE1IWjRibGRPZW01WFMyOU9RM051TjA0MlZHcFVaMmxXZFhRMVFqVTFTV3d0T1dVdGJ6UlVVMkpmZW5CWk5XaHFVbVp4YUZCd2NURklZak5qZG1sQlR6SmxObUZKTTJoTVMxbGtPRE0zU1RKdFJGbFVaRkZyVFdsUVNuSkdTMFJ6Wm5wM1kwdHdhRWRPTTA4eU9YSkZZVVprUlVoNWRDMUJiVUowVVdkaWVEWjJTRUp3WmpSMFdGOUdUMVJoUTB3MFkxZElialZhTUVwNldGQk9USFp6ZDJKT2IxTlhkVTVaVDBKamRYRTBWbDlzWm5WcU9VRjBVM3BwYzA1dVYzSlpYMWd5TldGbFRGVmtORUpLVEhWYVExbElObVJtTW14d04xWjBjVzFyYm1wd1lWaFFXWE5LUkVWRlIxODBjRTltV1dwVWNrMUtWams1Wkd0VVRqSkdTbU14UjFOQ2EwRmtlV3BHY1VaWGF6SktYemRzUmpKeVFVTkpNVEpSYlV3eWVsQkpYM1I0VUd0VE4wMTRSREZEVEZBNFNtOVNjR3hRUVRSZmNFdFFUWGxGTlRjMmNHazBSMHBQTUV0NlJWZHhZa3R1VkhwVlRsSnRaSHBPZDNsdlluTm9YM0JtVUU4NFZXSTNSamRUVVVwaGNqWkpibEYxTTI5M1JGOHRXbE00VTNOT1FtOUNXRmh5TlV3eGNYZEROSEEwUW1kVVdFMVZWVzFtVWt0QkxWQjRabDlDYkZGVllsaHNSM1pTU1dJelNXSkhVRkV4YVVkRGNqUlpVbDloU1dSelVEaE9aVUY1TTBwRlVGSmpUSGhtT0U4d2NXaG5RVmxZWnkweFoxaFllRlIyYnpSTWFUUkpTMFEzWDJoVWFWUlNVRzE2ZVhKRGJFcENMVzFtUlU1UmNERlpWekZwV2taaVJIWkdlbVZGU1ZGSFlWOXpSVTA1VTAxQlVrWlBaMWMzWkZWd05DMXNXa05LY1ZWR1prNTBjRVpRZW5ScGVFWjZabWxrUldWb1pUTkplakkwYzJZdGJXOVdWR04yTlZGc2JuWmhSM0JxTlhWQlNRPT0ifSwiZGVmYXVsdC1yb3V0ZS1vcGVuc2hpZnQtaW1hZ2UtcmVnaXN0cnkuYXBwcy5vY3A0LmV4YW1wbGUuY29tIjp7InVzZXJuYW1lIjoic2VydmljZWFjY291bnQiLCJwYXNzd29yZCI6ImV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbEl0TW10a1dVODJXbEJwTkMxRlZYaE5WekV4VHkxVFRHUm1WV3hqWW1aaWJtTkNOSGxPVG1STGNsa2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKd2JHRnVaUzFoY0hBaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sWTNKbGRDNXVZVzFsSWpvaVpHVm1ZWFZzZEMxMGIydGxiaTA1Y1hCMk5pSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWeWRtbGpaUzFoWTJOdmRXNTBMbTVoYldVaU9pSmtaV1poZFd4MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WlhKMmFXTmxMV0ZqWTI5MWJuUXVkV2xrSWpvaVptVmlOVFl3T1RjdE5qSm1OUzAwTkdSaExXSm1PVFl0WlRka016RmlaREppWXpSbElpd2ljM1ZpSWpvaWMzbHpkR1Z0T25ObGNuWnBZMlZoWTJOdmRXNTBPbkJzWVc1bExXRndjRHBrWldaaGRXeDBJbjAuRHBCTXVkSEhjbnExRU0tZUdwMnBJTVc3UmFyVW52ZVRPalJIa3ZQUXRrSC1yVnpVbTVpMHFGcXFBb3A5ZzZ3RXlqbG5MZXhqcFJWVG4wTzB2eG5XTnpuV0tvTkNzbjdONlRqVGdpVnV0NUI1NUlsLTllLW80VFNiX3pwWTVoalJmcWhQcHExSGIzY3ZpQU8yZTZhSTNoTEtZZDgzN0kybURZVGRRa01pUEpyRktEc2Z6d2NLcGhHTjNPMjlyRWFGZEVIeXQtQW1CdFFnYng2dkhCcGY0dFhfRk9UYUNMNGNXSG41WjBKelhQTkx2c3diTm9TV3VOWU9CY3VxNFZfbGZ1ajlBdFN6aXNObldyWV9YMjVhZUxVZDRCSkx1WkNZSDZkZjJscDdWdHFta25qcGFYUFlzSkRFRUdfNHBPZllqVHJNSlY5OWRrVE4yRkpjMUdTQmtBZHlqRnFGV2sySl83bEYyckFDSTEyUW1MMnpQSV90eFBrUzdNeEQxQ0xQOEpvUnBsUEE0X3BLUE15RTU3NnBpNEdKTzBLekVXcWJLblR6VU5SbWR6Tnd5b2JzaF9wZlBPOFViN0Y3U1FKYXI2SW5RdTNvd0RfLVpTOFNzTkJvQlhYcjVMMXF3QzRwNEJnVFhNVVVtZlJLQS1QeGZfQmxRVWJYbEd2UkliM0liR1BRMWlHQ3I0WVJfYUlkc1A4TmVBeTNKRVBSY0x4ZjhPMHFoZ0FZWGctMWdYWHhUdm80TGk0SUtEN19oVGlUUlBtenlyQ2xKQi1tZkVOUXAxWVcxaVpGYkR2RnplRUlRR2Ffc0VNOVNNQVJGT2dXN2RVcDQtbFpDSnFVRmZOdHBGUHp0aXhGemZpZEVlaGUzSXoyNHNmLW1vVlRjdjVRbG52YUdwajV1QUkiLCJlbWFpbCI6InNlcnZpY2VhY2NvdW50QGV4YW1wbGUub3JnIiwiYXV0aCI6ImMyVnlkbWxqWldGalkyOTFiblE2WlhsS2FHSkhZMmxQYVVwVFZYcEpNVTVwU1hOSmJYUndXa05KTmtsc1NYUk5iWFJyVjFVNE1sZHNRbkJPUXpGR1ZsaG9UbFo2UlhoVWVURlVWRWRTYlZaWGVHcFpiVnBwWW0xT1EwNUliRTlVYlZKTVkyeHJhV1pSTG1WNVNuQmpNMDFwVDJsS2NtUlhTbXhqYlRWc1pFZFdla3d6VG14amJscHdXVEpXYUZreVRuWmtWelV3U1dsM2FXRXpWbWxhV0VwMVdsaFNiR041TlhCaWVUbDZXbGhLTW1GWFRteFpWMDVxWWpOV2RXUkRPWFZaVnpGc1l6TkNhRmt5VldsUGFVcDNZa2RHZFZwVE1XaGpTRUZwVEVOS2NtUlhTbXhqYlRWc1pFZFdla3h0YkhaTU0wNXNZMjVhY0ZreVZtaFpNazUyWkZjMU1Fd3pUbXhaTTBwc1pFTTFkVmxYTVd4SmFtOXBXa2RXYlZsWVZuTmtRekV3WWpKMGJHSnBNRFZqV0VJeVRtbEpjMGx0ZERGWmJWWjVZbTFXTUZwWVRYVmhWemgyWXpKV2VXUnRiR3BhVjBacVdUSTVNV0p1VVhaak1sWjVaRzFzYWxwVE1XaFpNazUyWkZjMU1FeHROV2hpVjFWcFQybEthMXBYV21oa1YzZ3dTV2wzYVdFelZtbGFXRXAxV2xoU2JHTjVOWEJpZVRsNldsaEtNbUZYVG14WlYwNXFZak5XZFdSRE9YcGFXRW95WVZkT2JFeFhSbXBaTWpreFltNVJkV1JYYkd0SmFtOXBXbTFXYVU1VVdYZFBWR04wVG1wS2JVNVRNREJPUjFKb1RGZEtiVTlVV1hSYVZHUnJUWHBHYVZwRVNtbFplbEpzU1dsM2FXTXpWbWxKYW05cFl6TnNlbVJIVm5SUGJrNXNZMjVhY0ZreVZtaFpNazUyWkZjMU1FOXVRbk5aVnpWc1RGZEdkMk5FY0d0YVYxcG9aRmQ0TUVsdU1DNUVjRUpOZFdSSVNHTnVjVEZGVFMxbFIzQXljRWxOVnpkU1lYSlZiblpsVkU5cVVraHJkbEJSZEd0SUxYSldlbFZ0Tldrd2NVWnhjVUZ2Y0Rsbk5uZEZlV3BzYmt4bGVHcHdVbFpVYmpCUE1IWjRibGRPZW01WFMyOU9RM051TjA0MlZHcFVaMmxXZFhRMVFqVTFTV3d0T1dVdGJ6UlVVMkpmZW5CWk5XaHFVbVp4YUZCd2NURklZak5qZG1sQlR6SmxObUZKTTJoTVMxbGtPRE0zU1RKdFJGbFVaRkZyVFdsUVNuSkdTMFJ6Wm5wM1kwdHdhRWRPTTA4eU9YSkZZVVprUlVoNWRDMUJiVUowVVdkaWVEWjJTRUp3WmpSMFdGOUdUMVJoUTB3MFkxZElialZhTUVwNldGQk9USFp6ZDJKT2IxTlhkVTVaVDBKamRYRTBWbDlzWm5WcU9VRjBVM3BwYzA1dVYzSlpYMWd5TldGbFRGVmtORUpLVEhWYVExbElObVJtTW14d04xWjBjVzFyYm1wd1lWaFFXWE5LUkVWRlIxODBjRTltV1dwVWNrMUtWams1Wkd0VVRqSkdTbU14UjFOQ2EwRmtlV3BHY1VaWGF6SktYemRzUmpKeVFVTkpNVEpSYlV3eWVsQkpYM1I0VUd0VE4wMTRSREZEVEZBNFNtOVNjR3hRUVRSZmNFdFFUWGxGTlRjMmNHazBSMHBQTUV0NlJWZHhZa3R1VkhwVlRsSnRaSHBPZDNsdlluTm9YM0JtVUU4NFZXSTNSamRUVVVwaGNqWkpibEYxTTI5M1JGOHRXbE00VTNOT1FtOUNXRmh5TlV3eGNYZEROSEEwUW1kVVdFMVZWVzFtVWt0QkxWQjRabDlDYkZGVllsaHNSM1pTU1dJelNXSkhVRkV4YVVkRGNqUlpVbDloU1dSelVEaE9aVUY1TTBwRlVGSmpUSGhtT0U4d2NXaG5RVmxZWnkweFoxaFllRlIyYnpSTWFUUkpTMFEzWDJoVWFWUlNVRzE2ZVhKRGJFcENMVzFtUlU1UmNERlpWekZwV2taaVJIWkdlbVZGU1ZGSFlWOXpSVTA1VTAxQlVrWlBaMWMzWkZWd05DMXNXa05LY1ZWR1prNTBjRVpRZW5ScGVFWjZabWxrUldWb1pUTkplakkwYzJZdGJXOVdWR04yTlZGc2JuWmhSM0JxTlhWQlNRPT0ifSwiaW1hZ2UtcmVnaXN0cnkub3BlbnNoaWZ0LWltYWdlLXJlZ2lzdHJ5LnN2Yy5jbHVzdGVyLmxvY2FsOjUwMDAiOnsidXNlcm5hbWUiOiJzZXJ2aWNlYWNjb3VudCIsInBhc3N3b3JkIjoiZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklsSXRNbXRrV1U4MldsQnBOQzFGVlhoTlZ6RXhUeTFUVEdSbVZXeGpZbVppYm1OQ05IbE9UbVJMY2xraWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp3YkdGdVpTMWhjSEFpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pWkdWbVlYVnNkQzEwYjJ0bGJpMDVjWEIyTmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKa1pXWmhkV3gwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWRXbGtJam9pWm1WaU5UWXdPVGN0TmpKbU5TMDBOR1JoTFdKbU9UWXRaVGRrTXpGaVpESmlZelJsSWl3aWMzVmlJam9pYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1ME9uQnNZVzVsTFdGd2NEcGtaV1poZFd4MEluMC5EcEJNdWRISGNucTFFTS1lR3AycElNVzdSYXJVbnZlVE9qUkhrdlBRdGtILXJWelVtNWkwcUZxcUFvcDlnNndFeWpsbkxleGpwUlZUbjBPMHZ4bldOem5XS29OQ3NuN042VGpUZ2lWdXQ1QjU1SWwtOWUtbzRUU2JfenBZNWhqUmZxaFBwcTFIYjNjdmlBTzJlNmFJM2hMS1lkODM3STJtRFlUZFFrTWlQSnJGS0RzZnp3Y0twaEdOM08yOXJFYUZkRUh5dC1BbUJ0UWdieDZ2SEJwZjR0WF9GT1RhQ0w0Y1dIbjVaMEp6WFBOTHZzd2JOb1NXdU5ZT0JjdXE0Vl9sZnVqOUF0U3ppc05uV3JZX1gyNWFlTFVkNEJKTHVaQ1lINmRmMmxwN1Z0cW1rbmpwYVhQWXNKREVFR180cE9mWWpUck1KVjk5ZGtUTjJGSmMxR1NCa0FkeWpGcUZXazJKXzdsRjJyQUNJMTJRbUwyelBJX3R4UGtTN014RDFDTFA4Sm9ScGxQQTRfcEtQTXlFNTc2cGk0R0pPMEt6RVdxYktuVHpVTlJtZHpOd3lvYnNoX3BmUE84VWI3RjdTUUphcjZJblF1M293RF8tWlM4U3NOQm9CWFhyNUwxcXdDNHA0QmdUWE1VVW1mUktBLVB4Zl9CbFFVYlhsR3ZSSWIzSWJHUFExaUdDcjRZUl9hSWRzUDhOZUF5M0pFUFJjTHhmOE8wcWhnQVlYZy0xZ1hYeFR2bzRMaTRJS0Q3X2hUaVRSUG16eXJDbEpCLW1mRU5RcDFZVzFpWkZiRHZGemVFSVFHYV9zRU05U01BUkZPZ1c3ZFVwNC1sWkNKcVVGZk50cEZQenRpeEZ6ZmlkRWVoZTNJejI0c2YtbW9WVGN2NVFsbnZhR3BqNXVBSSIsImVtYWlsIjoic2VydmljZWFjY291bnRAZXhhbXBsZS5vcmciLCJhdXRoIjoiYzJWeWRtbGpaV0ZqWTI5MWJuUTZaWGxLYUdKSFkybFBhVXBUVlhwSk1VNXBTWE5KYlhSd1drTkpOa2xzU1hSTmJYUnJWMVU0TWxkc1FuQk9RekZHVmxob1RsWjZSWGhVZVRGVVZFZFNiVlpYZUdwWmJWcHBZbTFPUTA1SWJFOVViVkpNWTJ4cmFXWlJMbVY1U25Cak0wMXBUMmxLY21SWFNteGpiVFZzWkVkV2Vrd3pUbXhqYmxwd1dUSldhRmt5VG5aa1Z6VXdTV2wzYVdFelZtbGFXRXAxV2xoU2JHTjVOWEJpZVRsNldsaEtNbUZYVG14WlYwNXFZak5XZFdSRE9YVlpWekZzWXpOQ2FGa3lWV2xQYVVwM1lrZEdkVnBUTVdoalNFRnBURU5LY21SWFNteGpiVFZzWkVkV2VreHRiSFpNTTA1c1kyNWFjRmt5Vm1oWk1rNTJaRmMxTUV3elRteFpNMHBzWkVNMWRWbFhNV3hKYW05cFdrZFdiVmxZVm5Oa1F6RXdZakowYkdKcE1EVmpXRUl5VG1sSmMwbHRkREZaYlZaNVltMVdNRnBZVFhWaFZ6aDJZekpXZVdSdGJHcGFWMFpxV1RJNU1XSnVVWFpqTWxaNVpHMXNhbHBUTVdoWk1rNTJaRmMxTUV4dE5XaGlWMVZwVDJsS2ExcFhXbWhrVjNnd1NXbDNhV0V6Vm1sYVdFcDFXbGhTYkdONU5YQmllVGw2V2xoS01tRlhUbXhaVjA1cVlqTldkV1JET1hwYVdFb3lZVmRPYkV4WFJtcFpNamt4WW01UmRXUlhiR3RKYW05cFdtMVdhVTVVV1hkUFZHTjBUbXBLYlU1VE1EQk9SMUpvVEZkS2JVOVVXWFJhVkdSclRYcEdhVnBFU21sWmVsSnNTV2wzYVdNelZtbEphbTlwWXpOc2VtUkhWblJQYms1c1kyNWFjRmt5Vm1oWk1rNTJaRmMxTUU5dVFuTlpWelZzVEZkR2QyTkVjR3RhVjFwb1pGZDRNRWx1TUM1RWNFSk5kV1JJU0dOdWNURkZUUzFsUjNBeWNFbE5WemRTWVhKVmJuWmxWRTlxVWtocmRsQlJkR3RJTFhKV2VsVnROV2t3Y1VaeGNVRnZjRGxuTm5kRmVXcHNia3hsZUdwd1VsWlViakJQTUhaNGJsZE9lbTVYUzI5T1EzTnVOMDQyVkdwVVoybFdkWFExUWpVMVNXd3RPV1V0YnpSVVUySmZlbkJaTldocVVtWnhhRkJ3Y1RGSVlqTmpkbWxCVHpKbE5tRkpNMmhNUzFsa09ETTNTVEp0UkZsVVpGRnJUV2xRU25KR1MwUnpabnAzWTB0d2FFZE9NMDh5T1hKRllVWmtSVWg1ZEMxQmJVSjBVV2RpZURaMlNFSndaalIwV0Y5R1QxUmhRMHcwWTFkSWJqVmFNRXA2V0ZCT1RIWnpkMkpPYjFOWGRVNVpUMEpqZFhFMFZsOXNablZxT1VGMFUzcHBjMDV1VjNKWlgxZ3lOV0ZsVEZWa05FSktUSFZhUTFsSU5tUm1NbXh3TjFaMGNXMXJibXB3WVZoUVdYTktSRVZGUjE4MGNFOW1XV3BVY2sxS1ZqazVaR3RVVGpKR1NtTXhSMU5DYTBGa2VXcEdjVVpYYXpKS1h6ZHNSakp5UVVOSk1USlJiVXd5ZWxCSlgzUjRVR3RUTjAxNFJERkRURkE0U205U2NHeFFRVFJmY0V0UVRYbEZOVGMyY0drMFIwcFBNRXQ2UlZkeFlrdHVWSHBWVGxKdFpIcE9kM2x2WW5Ob1gzQm1VRTg0VldJM1JqZFRVVXBoY2paSmJsRjFNMjkzUkY4dFdsTTRVM05PUW05Q1dGaHlOVXd4Y1hkRE5IQTBRbWRVV0UxVlZXMW1Va3RCTFZCNFpsOUNiRkZWWWxoc1IzWlNTV0l6U1dKSFVGRXhhVWREY2pSWlVsOWhTV1J6VURoT1pVRjVNMHBGVUZKalRIaG1PRTh3Y1doblFWbFlaeTB4WjFoWWVGUjJielJNYVRSSlMwUTNYMmhVYVZSU1VHMTZlWEpEYkVwQ0xXMW1SVTVSY0RGWlZ6RnBXa1ppUkhaR2VtVkZTVkZIWVY5elJVMDVVMDFCVWtaUFoxYzNaRlZ3TkMxc1drTktjVlZHWms1MGNFWlFlblJwZUVaNlptbGtSV1ZvWlROSmVqSTBjMll0Ylc5V1ZHTjJOVkZzYm5aaFIzQnFOWFZCU1E9PSJ9LCJpbWFnZS1yZWdpc3RyeS5vcGVuc2hpZnQtaW1hZ2UtcmVnaXN0cnkuc3ZjOjUwMDAiOnsidXNlcm5hbWUiOiJzZXJ2aWNlYWNjb3VudCIsInBhc3N3b3JkIjoiZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklsSXRNbXRrV1U4MldsQnBOQzFGVlhoTlZ6RXhUeTFUVEdSbVZXeGpZbVppYm1OQ05IbE9UbVJMY2xraWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp3YkdGdVpTMWhjSEFpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pWkdWbVlYVnNkQzEwYjJ0bGJpMDVjWEIyTmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKa1pXWmhkV3gwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWRXbGtJam9pWm1WaU5UWXdPVGN0TmpKbU5TMDBOR1JoTFdKbU9UWXRaVGRrTXpGaVpESmlZelJsSWl3aWMzVmlJam9pYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1ME9uQnNZVzVsTFdGd2NEcGtaV1poZFd4MEluMC5EcEJNdWRISGNucTFFTS1lR3AycElNVzdSYXJVbnZlVE9qUkhrdlBRdGtILXJWelVtNWkwcUZxcUFvcDlnNndFeWpsbkxleGpwUlZUbjBPMHZ4bldOem5XS29OQ3NuN042VGpUZ2lWdXQ1QjU1SWwtOWUtbzRUU2JfenBZNWhqUmZxaFBwcTFIYjNjdmlBTzJlNmFJM2hMS1lkODM3STJtRFlUZFFrTWlQSnJGS0RzZnp3Y0twaEdOM08yOXJFYUZkRUh5dC1BbUJ0UWdieDZ2SEJwZjR0WF9GT1RhQ0w0Y1dIbjVaMEp6WFBOTHZzd2JOb1NXdU5ZT0JjdXE0Vl9sZnVqOUF0U3ppc05uV3JZX1gyNWFlTFVkNEJKTHVaQ1lINmRmMmxwN1Z0cW1rbmpwYVhQWXNKREVFR180cE9mWWpUck1KVjk5ZGtUTjJGSmMxR1NCa0FkeWpGcUZXazJKXzdsRjJyQUNJMTJRbUwyelBJX3R4UGtTN014RDFDTFA4Sm9ScGxQQTRfcEtQTXlFNTc2cGk0R0pPMEt6RVdxYktuVHpVTlJtZHpOd3lvYnNoX3BmUE84VWI3RjdTUUphcjZJblF1M293RF8tWlM4U3NOQm9CWFhyNUwxcXdDNHA0QmdUWE1VVW1mUktBLVB4Zl9CbFFVYlhsR3ZSSWIzSWJHUFExaUdDcjRZUl9hSWRzUDhOZUF5M0pFUFJjTHhmOE8wcWhnQVlYZy0xZ1hYeFR2bzRMaTRJS0Q3X2hUaVRSUG16eXJDbEpCLW1mRU5RcDFZVzFpWkZiRHZGemVFSVFHYV9zRU05U01BUkZPZ1c3ZFVwNC1sWkNKcVVGZk50cEZQenRpeEZ6ZmlkRWVoZTNJejI0c2YtbW9WVGN2NVFsbnZhR3BqNXVBSSIsImVtYWlsIjoic2VydmljZWFjY291bnRAZXhhbXBsZS5vcmciLCJhdXRoIjoiYzJWeWRtbGpaV0ZqWTI5MWJuUTZaWGxLYUdKSFkybFBhVXBUVlhwSk1VNXBTWE5KYlhSd1drTkpOa2xzU1hSTmJYUnJWMVU0TWxkc1FuQk9RekZHVmxob1RsWjZSWGhVZVRGVVZFZFNiVlpYZUdwWmJWcHBZbTFPUTA1SWJFOVViVkpNWTJ4cmFXWlJMbVY1U25Cak0wMXBUMmxLY21SWFNteGpiVFZzWkVkV2Vrd3pUbXhqYmxwd1dUSldhRmt5VG5aa1Z6VXdTV2wzYVdFelZtbGFXRXAxV2xoU2JHTjVOWEJpZVRsNldsaEtNbUZYVG14WlYwNXFZak5XZFdSRE9YVlpWekZzWXpOQ2FGa3lWV2xQYVVwM1lrZEdkVnBUTVdoalNFRnBURU5LY21SWFNteGpiVFZzWkVkV2VreHRiSFpNTTA1c1kyNWFjRmt5Vm1oWk1rNTJaRmMxTUV3elRteFpNMHBzWkVNMWRWbFhNV3hKYW05cFdrZFdiVmxZVm5Oa1F6RXdZakowYkdKcE1EVmpXRUl5VG1sSmMwbHRkREZaYlZaNVltMVdNRnBZVFhWaFZ6aDJZekpXZVdSdGJHcGFWMFpxV1RJNU1XSnVVWFpqTWxaNVpHMXNhbHBUTVdoWk1rNTJaRmMxTUV4dE5XaGlWMVZwVDJsS2ExcFhXbWhrVjNnd1NXbDNhV0V6Vm1sYVdFcDFXbGhTYkdONU5YQmllVGw2V2xoS01tRlhUbXhaVjA1cVlqTldkV1JET1hwYVdFb3lZVmRPYkV4WFJtcFpNamt4WW01UmRXUlhiR3RKYW05cFdtMVdhVTVVV1hkUFZHTjBUbXBLYlU1VE1EQk9SMUpvVEZkS2JVOVVXWFJhVkdSclRYcEdhVnBFU21sWmVsSnNTV2wzYVdNelZtbEphbTlwWXpOc2VtUkhWblJQYms1c1kyNWFjRmt5Vm1oWk1rNTJaRmMxTUU5dVFuTlpWelZzVEZkR2QyTkVjR3RhVjFwb1pGZDRNRWx1TUM1RWNFSk5kV1JJU0dOdWNURkZUUzFsUjNBeWNFbE5WemRTWVhKVmJuWmxWRTlxVWtocmRsQlJkR3RJTFhKV2VsVnROV2t3Y1VaeGNVRnZjRGxuTm5kRmVXcHNia3hsZUdwd1VsWlViakJQTUhaNGJsZE9lbTVYUzI5T1EzTnVOMDQyVkdwVVoybFdkWFExUWpVMVNXd3RPV1V0YnpSVVUySmZlbkJaTldocVVtWnhhRkJ3Y1RGSVlqTmpkbWxCVHpKbE5tRkpNMmhNUzFsa09ETTNTVEp0UkZsVVpGRnJUV2xRU25KR1MwUnpabnAzWTB0d2FFZE9NMDh5T1hKRllVWmtSVWg1ZEMxQmJVSjBVV2RpZURaMlNFSndaalIwV0Y5R1QxUmhRMHcwWTFkSWJqVmFNRXA2V0ZCT1RIWnpkMkpPYjFOWGRVNVpUMEpqZFhFMFZsOXNablZxT1VGMFUzcHBjMDV1VjNKWlgxZ3lOV0ZsVEZWa05FSktUSFZhUTFsSU5tUm1NbXh3TjFaMGNXMXJibXB3WVZoUVdYTktSRVZGUjE4MGNFOW1XV3BVY2sxS1ZqazVaR3RVVGpKR1NtTXhSMU5DYTBGa2VXcEdjVVpYYXpKS1h6ZHNSakp5UVVOSk1USlJiVXd5ZWxCSlgzUjRVR3RUTjAxNFJERkRURkE0U205U2NHeFFRVFJmY0V0UVRYbEZOVGMyY0drMFIwcFBNRXQ2UlZkeFlrdHVWSHBWVGxKdFpIcE9kM2x2WW5Ob1gzQm1VRTg0VldJM1JqZFRVVXBoY2paSmJsRjFNMjkzUkY4dFdsTTRVM05PUW05Q1dGaHlOVXd4Y1hkRE5IQTBRbWRVV0UxVlZXMW1Va3RCTFZCNFpsOUNiRkZWWWxoc1IzWlNTV0l6U1dKSFVGRXhhVWREY2pSWlVsOWhTV1J6VURoT1pVRjVNMHBGVUZKalRIaG1PRTh3Y1doblFWbFlaeTB4WjFoWWVGUjJielJNYVRSSlMwUTNYMmhVYVZSU1VHMTZlWEpEYkVwQ0xXMW1SVTVSY0RGWlZ6RnBXa1ppUkhaR2VtVkZTVkZIWVY5elJVMDVVMDFCVWtaUFoxYzNaRlZ3TkMxc1drTktjVlZHWms1MGNFWlFlblJwZUVaNlptbGtSV1ZvWlROSmVqSTBjMll0Ylc5V1ZHTjJOVkZzYm5aaFIzQnFOWFZCU1E9PSJ9fQ==
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: feb56097-62f5-44da-bf96-e7d31bd2bc4e
      openshift.io/token-secret.name: default-token-9qpv6
      openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IlItMmtkWU82WlBpNC1FVXhNVzExTy1TTGRmVWxjYmZibmNCNHlOTmRLclkifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJwbGFuZS1hcHAiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiZGVmYXVsdC10b2tlbi05cXB2NiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiZmViNTYwOTctNjJmNS00NGRhLWJmOTYtZTdkMzFiZDJiYzRlIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OnBsYW5lLWFwcDpkZWZhdWx0In0.DpBMudHHcnq1EM-eGp2pIMW7RarUnveTOjRHkvPQtkH-rVzUm5i0qFqqAop9g6wEyjlnLexjpRVTn0O0vxnWNznWKoNCsn7N6TjTgiVut5B55Il-9e-o4TSb_zpY5hjRfqhPpq1Hb3cviAO2e6aI3hLKYd837I2mDYTdQkMiPJrFKDsfzwcKphGN3O29rEaFdEHyt-AmBtQgbx6vHBpf4tX_FOTaCL4cWHn5Z0JzXPNLvswbNoSWuNYOBcuq4V_lfuj9AtSzisNnWrY_X25aeLUd4BJLuZCYH6df2lp7VtqmknjpaXPYsJDEEG_4pOfYjTrMJV99dkTN2FJc1GSBkAdyjFqFWk2J_7lF2rACI12QmL2zPI_txPkS7MxD1CLP8JoRplPA4_pKPMyE576pi4GJO0KzEWqbKnTzUNRmdzNwyobsh_pfPO8Ub7F7SQJar6InQu3owD_-ZS8SsNBoBXXr5L1qwC4p4BgTXMUUmfRKA-Pxf_BlQUbXlGvRIb3IbGPQ1iGCr4YR_aIdsP8NeAy3JEPRcLxf8O0qhgAYXg-1gXXxTvo4Li4IKD7_hTiTRPmzyrClJB-mfENQp1YW1iZFbDvFzeEIQGa_sEM9SMARFOgW7dUp4-lZCJqUFfNtpFPztixFzfidEehe3Iz24sf-moVTcv5QlnvaGpj5uAI
    creationTimestamp: "2024-10-12T09:51:57Z"
    name: default-dockercfg-tngxd
    namespace: plane-app
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: default-token-9qpv6
      uid: db5dd1a9-0908-49e0-87f0-eb79d97c3f87
    resourceVersion: "849426"
    uid: 7e96a004-d58b-48bd-a40f-9f8924a3d1fb
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: cGxhbmUtYXBw
    service-ca.crt: 
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklsSXRNbXRrV1U4MldsQnBOQzFGVlhoTlZ6RXhUeTFUVEdSbVZXeGpZbVppYm1OQ05IbE9UbVJMY2xraWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp3YkdGdVpTMWhjSEFpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pWkdWbVlYVnNkQzEwYjJ0bGJpMDVjWEIyTmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKa1pXWmhkV3gwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWRXbGtJam9pWm1WaU5UWXdPVGN0TmpKbU5TMDBOR1JoTFdKbU9UWXRaVGRrTXpGaVpESmlZelJsSWl3aWMzVmlJam9pYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1ME9uQnNZVzVsTFdGd2NEcGtaV1poZFd4MEluMC5EcEJNdWRISGNucTFFTS1lR3AycElNVzdSYXJVbnZlVE9qUkhrdlBRdGtILXJWelVtNWkwcUZxcUFvcDlnNndFeWpsbkxleGpwUlZUbjBPMHZ4bldOem5XS29OQ3NuN042VGpUZ2lWdXQ1QjU1SWwtOWUtbzRUU2JfenBZNWhqUmZxaFBwcTFIYjNjdmlBTzJlNmFJM2hMS1lkODM3STJtRFlUZFFrTWlQSnJGS0RzZnp3Y0twaEdOM08yOXJFYUZkRUh5dC1BbUJ0UWdieDZ2SEJwZjR0WF9GT1RhQ0w0Y1dIbjVaMEp6WFBOTHZzd2JOb1NXdU5ZT0JjdXE0Vl9sZnVqOUF0U3ppc05uV3JZX1gyNWFlTFVkNEJKTHVaQ1lINmRmMmxwN1Z0cW1rbmpwYVhQWXNKREVFR180cE9mWWpUck1KVjk5ZGtUTjJGSmMxR1NCa0FkeWpGcUZXazJKXzdsRjJyQUNJMTJRbUwyelBJX3R4UGtTN014RDFDTFA4Sm9ScGxQQTRfcEtQTXlFNTc2cGk0R0pPMEt6RVdxYktuVHpVTlJtZHpOd3lvYnNoX3BmUE84VWI3RjdTUUphcjZJblF1M293RF8tWlM4U3NOQm9CWFhyNUwxcXdDNHA0QmdUWE1VVW1mUktBLVB4Zl9CbFFVYlhsR3ZSSWIzSWJHUFExaUdDcjRZUl9hSWRzUDhOZUF5M0pFUFJjTHhmOE8wcWhnQVlYZy0xZ1hYeFR2bzRMaTRJS0Q3X2hUaVRSUG16eXJDbEpCLW1mRU5RcDFZVzFpWkZiRHZGemVFSVFHYV9zRU05U01BUkZPZ1c3ZFVwNC1sWkNKcVVGZk50cEZQenRpeEZ6ZmlkRWVoZTNJejI0c2YtbW9WVGN2NVFsbnZhR3BqNXVBSQ==
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: feb56097-62f5-44da-bf96-e7d31bd2bc4e
    creationTimestamp: "2024-10-12T09:51:57Z"
    name: default-token-9qpv6
    namespace: plane-app
    resourceVersion: "849422"
    uid: db5dd1a9-0908-49e0-87f0-eb79d97c3f87
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    .dockercfg: 
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: deployer
      kubernetes.io/service-account.uid: 6b165e22-702c-49d2-9274-783cbd49bf0d
      openshift.io/token-secret.name: deployer-token-r5jlh
      openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IlItMmtkWU82WlBpNC1FVXhNVzExTy1TTGRmVWxjYmZibmNCNHlOTmRLclkifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJwbGFuZS1hcHAiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiZGVwbG95ZXItdG9rZW4tcjVqbGgiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGVwbG95ZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiI2YjE2NWUyMi03MDJjLTQ5ZDItOTI3NC03ODNjYmQ0OWJmMGQiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6cGxhbmUtYXBwOmRlcGxveWVyIn0.vD-iAHlVCH9fE1BTe3IpyDFfUMVMj1-QP_uTyvzOSL65CIY8xY2_9xeNRk5kbZd9t3uSAj3aDXE3-8BMXmllU8kQE1gSkH8CPWQEw8v_uvS4SD1O9PuBO7Udue8L4HYTSC6GC3aFs9iQYs_Ij7c3Q6KhzZ8zxAuU5L7TlhbYMK_LGdmIvA02lTgwblRgfP-gUSS-QVE836AVIjazsc-ywP-8IBFBL3sewKrb2S3ZBFODL_XVnz4plzZdd19dz8UMWK0717P9se_nKVc611Vaj73EVfw3tBAGTIQFkRUXGoTuod9VfLOmZ4RCB5vIwZjFv1f786LgLjANb-4cw2psLV0V_9wdPsbbSd7qzKu7FLqSqHTfiR3KLkEvUvRQCtIx61wApTWiJ1EB9DEnsUPCuZ9YWAOdj47dcjCuZWb6amBsZ7U8HXebAP2sbHiFArvYbhpvJiB3cqKs0qEV6WbRss4Vx5KVof-HVrmT8Z2HS4ehHmkvmx3ziW3jxX-fkGOFdJbUAEw9i1uT3BzLcRZGL4NZuuBmGwFESS4QwmiaoddQoG_JnJmQXm4HnsLW7bg6jv557WEttlAMMV7d0aWTSq6XRXBYjjmRbDeWaiJ50sSQkF9MhjTgsiylhNqZhmpX8ocNVBPTt3QUGZ1G1LpVpVWAtPsMIE9qF5BQYL4ax4o
    creationTimestamp: "2024-10-12T09:51:57Z"
    name: deployer-dockercfg-6pjj8
    namespace: plane-app
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: deployer-token-r5jlh
      uid: 36c65674-7407-4208-86ac-b4511d7f6522
    resourceVersion: "849424"
    uid: ed1fb25f-852f-489f-afc5-028832347922
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: cGxhbmUtYXBw
    service-ca.crt: 
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklsSXRNbXRrV1U4MldsQnBOQzFGVlhoTlZ6RXhUeTFUVEdSbVZXeGpZbVppYm1OQ05IbE9UbVJMY2xraWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp3YkdGdVpTMWhjSEFpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pWkdWd2JHOTVaWEl0ZEc5clpXNHRjalZxYkdnaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNXVZVzFsSWpvaVpHVndiRzk1WlhJaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNTFhV1FpT2lJMllqRTJOV1V5TWkwM01ESmpMVFE1WkRJdE9USTNOQzAzT0ROalltUTBPV0ptTUdRaUxDSnpkV0lpT2lKemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUTZjR3hoYm1VdFlYQndPbVJsY0d4dmVXVnlJbjAudkQtaUFIbFZDSDlmRTFCVGUzSXB5REZmVU1WTWoxLVFQX3VUeXZ6T1NMNjVDSVk4eFkyXzl4ZU5SazVrYlpkOXQzdVNBajNhRFhFMy04Qk1YbWxsVThrUUUxZ1NrSDhDUFdRRXc4dl91dlM0U0QxTzlQdUJPN1VkdWU4TDRIWVRTQzZHQzNhRnM5aVFZc19JajdjM1E2S2h6Wjh6eEF1VTVMN1RsaGJZTUtfTEdkbUl2QTAybFRnd2JsUmdmUC1nVVNTLVFWRTgzNkFWSWphenNjLXl3UC04SUJGQkwzc2V3S3JiMlMzWkJGT0RMX1hWbno0cGx6WmRkMTlkejhVTVdLMDcxN1A5c2VfbktWYzYxMVZhajczRVZmdzN0QkFHVElRRmtSVVhHb1R1b2Q5VmZMT21aNFJDQjV2SXdaakZ2MWY3ODZMZ0xqQU5iLTRjdzJwc0xWMFZfOXdkUHNiYlNkN3F6S3U3RkxxU3FIVGZpUjNLTGtFdlV2UlFDdEl4NjF3QXBUV2lKMUVCOURFbnNVUEN1WjlZV0FPZGo0N2RjakN1WldiNmFtQnNaN1U4SFhlYkFQMnNiSGlGQXJ2WWJocHZKaUIzY3FLczBxRVY2V2JSc3M0Vng1S1ZvZi1IVnJtVDhaMkhTNGVoSG1rdm14M3ppVzNqeFgtZmtHT0ZkSmJVQUV3OWkxdVQzQnpMY1JaR0w0Tlp1dUJtR3dGRVNTNFF3bWlhb2RkUW9HX0puSm1RWG00SG5zTFc3Ymc2anY1NTdXRXR0bEFNTVY3ZDBhV1RTcTZYUlhCWWpqbVJiRGVXYWlKNTBzU1FrRjlNaGpUZ3NpeWxoTnFaaG1wWDhvY05WQlBUdDNRVUdaMUcxTHBWcFZXQXRQc01JRTlxRjVCUVlMNGF4NG8=
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: deployer
      kubernetes.io/service-account.uid: 6b165e22-702c-49d2-9274-783cbd49bf0d
    creationTimestamp: "2024-10-12T09:51:57Z"
    name: deployer-token-r5jlh
    namespace: plane-app
    resourceVersion: "849421"
    uid: 36c65674-7407-4208-86ac-b4511d7f6522
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    .dockercfg: 
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: pipeline
      kubernetes.io/service-account.uid: 37e142d7-2815-470e-9602-01044f8d2188
      openshift.io/token-secret.name: pipeline-token-47d79
      openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IlItMmtkWU82WlBpNC1FVXhNVzExTy1TTGRmVWxjYmZibmNCNHlOTmRLclkifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJwbGFuZS1hcHAiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoicGlwZWxpbmUtdG9rZW4tNDdkNzkiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoicGlwZWxpbmUiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiIzN2UxNDJkNy0yODE1LTQ3MGUtOTYwMi0wMTA0NGY4ZDIxODgiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6cGxhbmUtYXBwOnBpcGVsaW5lIn0.QLNxdElH8GRg8MkGFsLgy9-KpzCM-MLq3sCyrs4utXOwn5BhoMNwTIU_C2eXJxYjsjjqTFj6yrk5hDsIt2EVZNyc-yuZM6t6K49__A74RELAqEnKSN1LuKveANvoFY_PEyK8gkY7pkJK2ygePhtU8b0t0stqlk2orYUzWozuClzFUNkhDkCbXe54GT_1LXSFY5f38ybQbj1px4q1Z8iagRTBvzFEBM6t2lD_EPsHuShxcXW3bL9-IQZh__8w9ifT3eOviuBUlkl2FkbK3L1P9oUohvSZu8g6o1DOauOcDPkuOh3jcCc0takDTGdundZ6nvwxXC5w6jU53CMWo2xGFvsnMvZNhhvy7AAQsb4aobiHC_Ri-lXGvwkUaNYuYQmpb4tI_ihjaOO8Gby3J0ndyeUieY2CMVDeXRtKR_RMhBJSTLh9tNdl4VBeIQrTKPqddnnMdy-8gVjHO987D7vFvIqbjbSkOcTcBgnZ_56ax8P1FR0IFuUIIKKFl0BrzG_X3z6EsSAhQKCap2oJt_E95u4G9I8ngChxKaIjcRzpHnCn8_A1XwuvIGQSJG1u6F_bjtrWseK7raeEdXBHTIZNdlSTp0Y0Zlo9NX2Bwqi4i9kUIPdn9JppP2XUqkre7_janIxdNjipk2wi-DE3alydDM4GCk5pTuu-JLigLpcqIyM
    creationTimestamp: "2024-10-12T09:51:57Z"
    name: pipeline-dockercfg-2lxrc
    namespace: plane-app
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: pipeline-token-47d79
      uid: 0b7466c4-6b7e-49f3-9f03-311eaf9936f0
    resourceVersion: "849443"
    uid: f653f53d-fccd-4bf6-b753-1fa8beaf6dd6
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: cGxhbmUtYXBw
    service-ca.crt: 
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklsSXRNbXRrV1U4MldsQnBOQzFGVlhoTlZ6RXhUeTFUVEdSbVZXeGpZbVppYm1OQ05IbE9UbVJMY2xraWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp3YkdGdVpTMWhjSEFpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pY0dsd1pXeHBibVV0ZEc5clpXNHRORGRrTnpraUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNXVZVzFsSWpvaWNHbHdaV3hwYm1VaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNTFhV1FpT2lJek4yVXhOREprTnkweU9ERTFMVFEzTUdVdE9UWXdNaTB3TVRBME5HWTRaREl4T0RnaUxDSnpkV0lpT2lKemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUTZjR3hoYm1VdFlYQndPbkJwY0dWc2FXNWxJbjAuUUxOeGRFbEg4R1JnOE1rR0ZzTGd5OS1LcHpDTS1NTHEzc0N5cnM0dXRYT3duNUJob01Od1RJVV9DMmVYSnhZanNqanFURmo2eXJrNWhEc0l0MkVWWk55Yy15dVpNNnQ2SzQ5X19BNzRSRUxBcUVuS1NOMUx1S3ZlQU52b0ZZX1BFeUs4Z2tZN3BrSksyeWdlUGh0VThiMHQwc3RxbGsyb3JZVXpXb3p1Q2x6RlVOa2hEa0NiWGU1NEdUXzFMWFNGWTVmMzh5YlFiajFweDRxMVo4aWFnUlRCdnpGRUJNNnQybERfRVBzSHVTaHhjWFczYkw5LUlRWmhfXzh3OWlmVDNlT3ZpdUJVbGtsMkZrYkszTDFQOW9Vb2h2U1p1OGc2bzFET2F1T2NEUGt1T2gzamNDYzB0YWtEVEdkdW5kWjZudnd4WEM1dzZqVTUzQ01XbzJ4R0Z2c25NdlpOaGh2eTdBQVFzYjRhb2JpSENfUmktbFhHdndrVWFOWXVZUW1wYjR0SV9paGphT084R2J5M0owbmR5ZVVpZVkyQ01WRGVYUnRLUl9STWhCSlNUTGg5dE5kbDRWQmVJUXJUS1BxZGRubk1keS04Z1ZqSE85ODdEN3ZGdklxYmpiU2tPY1RjQmduWl81NmF4OFAxRlIwSUZ1VUlJS0tGbDBCcnpHX1gzejZFc1NBaFFLQ2FwMm9KdF9FOTV1NEc5SThuZ0NoeEthSWpjUnpwSG5DbjhfQTFYd3V2SUdRU0pHMXU2Rl9ianRyV3NlSzdyYWVFZFhCSFRJWk5kbFNUcDBZMFpsbzlOWDJCd3FpNGk5a1VJUGRuOUpwcFAyWFVxa3JlN19qYW5JeGROamlwazJ3aS1ERTNhbHlkRE00R0NrNXBUdXUtSkxpZ0xwY3FJeU0=
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: pipeline
      kubernetes.io/service-account.uid: 37e142d7-2815-470e-9602-01044f8d2188
    creationTimestamp: "2024-10-12T09:51:57Z"
    name: pipeline-token-47d79
    namespace: plane-app
    resourceVersion: "849441"
    uid: 0b7466c4-6b7e-49f3-9f03-311eaf9936f0
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    SECRET_KEY: NjBncDBieWZ6MmR2ZmZhNDVjeGwyMHAxc2N5OXhicGY2ZDhjNXkwZ2VlamdreXAxYjU=
  kind: Secret
  metadata:
    annotations:
      meta.helm.sh/release-name: plane-dev
      meta.helm.sh/release-namespace: plane-app
    creationTimestamp: "2024-10-12T14:07:59Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: plane-dev-app-secrets
    namespace: plane-app
    resourceVersion: "968664"
    uid: f9b11965-c0f2-46f3-ac38-a37b578e849a
  type: Opaque
- apiVersion: v1
  data:
    AWS_SECRET_ACCESS_KEY: cGFzc3dvcmQ=
    MINIO_ROOT_PASSWORD: cGFzc3dvcmQ=
  kind: Secret
  metadata:
    annotations:
      meta.helm.sh/release-name: plane-dev
      meta.helm.sh/release-namespace: plane-app
    creationTimestamp: "2024-10-12T14:07:59Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: plane-dev-doc-store-secrets
    namespace: plane-app
    resourceVersion: "968667"
    uid: 4874278d-2567-45d7-982e-cf6853937225
  type: Opaque
- apiVersion: v1
  data:
    POSTGRES_PASSWORD: cGxhbmU=
  kind: Secret
  metadata:
    annotations:
      meta.helm.sh/release-name: plane-dev
      meta.helm.sh/release-namespace: plane-app
    creationTimestamp: "2024-10-12T14:07:59Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: plane-dev-pgdb-secrets
    namespace: plane-app
    resourceVersion: "968665"
    uid: 40981b60-2498-4109-8098-af684bf1a828
  type: Opaque
- apiVersion: v1
  data:
    RABBITMQ_DEFAULT_PASS: cGxhbmU=
    RABBITMQ_DEFAULT_USER: cGxhbmU=
  kind: Secret
  metadata:
    annotations:
      meta.helm.sh/release-name: plane-dev
      meta.helm.sh/release-namespace: plane-app
    creationTimestamp: "2024-10-12T14:07:59Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: plane-dev-rabbitmq-secrets
    namespace: plane-app
    resourceVersion: "968666"
    uid: 30703499-81d6-4c72-864c-f600ebc22480
  type: Opaque
- apiVersion: v1
  data:
    .dockercfg: eyIxNzIuMzAuMTE5LjE2ODo1MDAwIjp7InVzZXJuYW1lIjoic2VydmljZWFjY291bnQiLCJwYXNzd29yZCI6ImV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbEl0TW10a1dVODJXbEJwTkMxRlZYaE5WekV4VHkxVFRHUm1WV3hqWW1aaWJtTkNOSGxPVG1STGNsa2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKd2JHRnVaUzFoY0hBaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sWTNKbGRDNXVZVzFsSWpvaWNHeGhibVV0WkdWMkxYTnlkaTFoWTJOdmRXNTBMWFJ2YTJWdUxUUnhaSFo0SWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWJtRnRaU0k2SW5Cc1lXNWxMV1JsZGkxemNuWXRZV05qYjNWdWRDSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWeWRtbGpaUzFoWTJOdmRXNTBMblZwWkNJNklqZzJZVEpsWlRaa0xURm1ObVl0TkdVelpTMWlOekEyTFRkaU56TTFPR0UzWVRnd09DSXNJbk4xWWlJNkluTjVjM1JsYlRwelpYSjJhV05sWVdOamIzVnVkRHB3YkdGdVpTMWhjSEE2Y0d4aGJtVXRaR1YyTFhOeWRpMWhZMk52ZFc1MEluMC5EbGhlMVN0WGc1VEo5NFpUWW0zM3JRN3M2bWdmQ0oyM1ctV2RGbVpNcmY3NHRjdG1YOHVvTk42MG85YV9mTlUxbDRLSElhTUtPWFJiWmM3TTJqOG5xYnIzZTJ4cDNzUVdPd2c0MkgyZ2EzM3hheFdKUjFVUDRHU2ZUd2xzb20yQ0pIcGtWeTVqSnBIZm4zTnJFU3h0U1dzTGpfbHA2Zm1iNGVVdzFocUdZbGlJX2NOOU5yMVQzTlU3Qnowd3JqZzdveDM3UVkyUkhPZGdSakVBU1RZSkRPZk5PbWhUOVg1XzhwUERfTW56REZnOHJIQ0F6NHl6Sm9PUy04UU1PQlFSWHQ0Uno1bGY4bjdqVVZRMlhRb0pNZ3M5cy0wakU4NHZWdGNwWjdlWVY5bEYyVFJRbkRkY0UtQUtMRnRoQVZPUC1sS3RZckRmOVdJb0tuSjFFVFVpS25oU3k3QWFYcmZ4SnJUcHNOU3JMRUVXNWR0NG5iLVlkNzQ5VmItbkFIa1FOQks1X3lZN1FhaU9acVY2TzdpZGNXQTRUMUNROUFQeHQ1MFNDaGlzX0tFM3dmM1JpY3VwVEY4TldXMUNYRk5BRmVRTk5pSGplaGZiWF9VM19BSmszbEltQVBOZWE2bFd3N3JsTHZSRVNRc1l6QXJRN3VBTGFtUHBKTkU0enBwUXFJWnpneDRPUHF6Wjh6Ym5TbXdzR1loX1JvOHpEdDROYU1yQjRETnZRT0JnMVZ1cHZ4VHpPSDM0bEwxRkxTMml5bEdCb2N2SkdwN3JOVWY4bXZBZENJQThYSHFEeFZicF9UNXVyakdrYjFxUEtUcjFaZjlmSDdtdk96RHg5ZWtEMTgzVUd1T28zYndZZDFSdzRPUU5NQmp6Y09qWEtobmxSODBVbmFDWFlZRSIsImVtYWlsIjoic2VydmljZWFjY291bnRAZXhhbXBsZS5vcmciLCJhdXRoIjoiYzJWeWRtbGpaV0ZqWTI5MWJuUTZaWGxLYUdKSFkybFBhVXBUVlhwSk1VNXBTWE5KYlhSd1drTkpOa2xzU1hSTmJYUnJWMVU0TWxkc1FuQk9RekZHVmxob1RsWjZSWGhVZVRGVVZFZFNiVlpYZUdwWmJWcHBZbTFPUTA1SWJFOVViVkpNWTJ4cmFXWlJMbVY1U25Cak0wMXBUMmxLY21SWFNteGpiVFZzWkVkV2Vrd3pUbXhqYmxwd1dUSldhRmt5VG5aa1Z6VXdTV2wzYVdFelZtbGFXRXAxV2xoU2JHTjVOWEJpZVRsNldsaEtNbUZYVG14WlYwNXFZak5XZFdSRE9YVlpWekZzWXpOQ2FGa3lWV2xQYVVwM1lrZEdkVnBUTVdoalNFRnBURU5LY21SWFNteGpiVFZzWkVkV2VreHRiSFpNTTA1c1kyNWFjRmt5Vm1oWk1rNTJaRmMxTUV3elRteFpNMHBzWkVNMWRWbFhNV3hKYW05cFkwZDRhR0p0VlhSYVIxWXlURmhPZVdScE1XaFpNazUyWkZjMU1FeFlVblpoTWxaMVRGUlNlRnBJV2pSSmFYZHBZVE5XYVZwWVNuVmFXRkpzWTNrMWNHSjVPWHBhV0VveVlWZE9iRmxYVG1waU0xWjFaRU01ZWxwWVNqSmhWMDVzVEZkR2Fsa3lPVEZpYmxGMVltMUdkRnBUU1RaSmJrSnpXVmMxYkV4WFVteGthVEY2WTI1WmRGbFhUbXBpTTFaMVpFTkpjMGx0ZERGWmJWWjVZbTFXTUZwWVRYVmhWemgyWXpKV2VXUnRiR3BhVjBacVdUSTVNV0p1VVhaak1sWjVaRzFzYWxwVE1XaFpNazUyWkZjMU1FeHVWbkJhUTBrMlNXcG5NbGxVU214YVZGcHJURlJHYlU1dFdYUk9SMVY2V2xNeGFVNTZRVEpNVkdScFRucE5NVTlIUlROWlZHZDNUME5KYzBsdVRqRlphVWsyU1c1T05XTXpVbXhpVkhCNldsaEtNbUZYVG14WlYwNXFZak5XZFdSRWNIZGlSMFoxV2xNeGFHTklRVFpqUjNob1ltMVZkRnBIVmpKTVdFNTVaR2t4YUZreVRuWmtWelV3U1c0d0xrUnNhR1V4VTNSWVp6VlVTamswV2xSWmJUTXpjbEUzY3padFoyWkRTakl6VnkxWFpFWnRXazF5WmpjMGRHTjBiVmc0ZFc5T1RqWXdiemxoWDJaT1ZURnNORXRJU1dGTlMwOVlVbUphWXpkTk1tbzRibkZpY2pObE1uaHdNM05SVjA5M1p6UXlTREpuWVRNemVHRjRWMHBTTVZWUU5FZFRabFIzYkhOdmJUSkRTa2h3YTFaNU5XcEtjRWhtYmpOT2NrVlRlSFJUVjNOTWFsOXNjRFptYldJMFpWVjNNV2h4UjFsc2FVbGZZMDQ1VG5JeFZETk9WVGRDZWpCM2NtcG5OMjk0TXpkUldUSlNTRTlrWjFKcVJVRlRWRmxLUkU5bVRrOXRhRlE1V0RWZk9IQlFSRjlOYm5wRVJtYzRja2hEUVhvMGVYcEtiMDlUTFRoUlRVOUNVVkpZZERSU2VqVnNaamh1TjJwVlZsRXlXRkZ2U2sxbmN6bHpMVEJxUlRnMGRsWjBZM0JhTjJWWlZqbHNSakpVVWxGdVJHUmpSUzFCUzB4R2RHaEJWazlRTFd4TGRGbHlSR1k1VjBsdlMyNUtNVVZVVldsTGJtaFRlVGRCWVZoeVpuaEtjbFJ3YzA1VGNreEZSVmMxWkhRMGJtSXRXV1EzTkRsV1lpMXVRVWhyVVU1Q1N6VmZlVmszVVdGcFQxcHhWalpQTjJsa1kxZEJORlF4UTFFNVFWQjRkRFV3VTBOb2FYTmZTMFV6ZDJZelVtbGpkWEJVUmpoT1YxY3hRMWhHVGtGR1pWRk9UbWxJYW1Wb1ptSllYMVV6WDBGS2F6TnNTVzFCVUU1bFlUWnNWM2MzY214TWRsSkZVMUZ6V1hwQmNsRTNkVUZNWVcxUWNFcE9SVFI2Y0hCUmNVbGFlbWQ0TkU5UWNYcGFPSHBpYmxOdGQzTkhXV2hmVW04NGVrUjBORTVoVFhKQ05FUk9kbEZQUW1jeFZuVndkbmhVZWs5SU16UnNUREZHVEZNeWFYbHNSMEp2WTNaS1IzQTNjazVWWmpodGRrRmtRMGxCT0ZoSWNVUjRWbUp3WDFRMWRYSnFSMnRpTVhGUVMxUnlNVnBtT1daSU4yMTJUM3BFZURsbGEwUXhPRE5WUjNWUGJ6TmlkMWxrTVZKM05FOVJUazFDYW5walQycFlTMmh1YkZJNE1GVnVZVU5ZV1ZsRiJ9LCJkZWZhdWx0LXJvdXRlLW9wZW5zaGlmdC1pbWFnZS1yZWdpc3RyeS5hcHBzLm9jcDQuZXhhbXBsZS5jb20iOnsidXNlcm5hbWUiOiJzZXJ2aWNlYWNjb3VudCIsInBhc3N3b3JkIjoiZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklsSXRNbXRrV1U4MldsQnBOQzFGVlhoTlZ6RXhUeTFUVEdSbVZXeGpZbVppYm1OQ05IbE9UbVJMY2xraWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp3YkdGdVpTMWhjSEFpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pY0d4aGJtVXRaR1YyTFhOeWRpMWhZMk52ZFc1MExYUnZhMlZ1TFRSeFpIWjRJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpYSjJhV05sTFdGalkyOTFiblF1Ym1GdFpTSTZJbkJzWVc1bExXUmxkaTF6Y25ZdFlXTmpiM1Z1ZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SWpnMllUSmxaVFprTFRGbU5tWXROR1V6WlMxaU56QTJMVGRpTnpNMU9HRTNZVGd3T0NJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHdiR0Z1WlMxaGNIQTZjR3hoYm1VdFpHVjJMWE55ZGkxaFkyTnZkVzUwSW4wLkRsaGUxU3RYZzVUSjk0WlRZbTMzclE3czZtZ2ZDSjIzVy1XZEZtWk1yZjc0dGN0bVg4dW9OTjYwbzlhX2ZOVTFsNEtISWFNS09YUmJaYzdNMmo4bnFicjNlMnhwM3NRV093ZzQySDJnYTMzeGF4V0pSMVVQNEdTZlR3bHNvbTJDSkhwa1Z5NWpKcEhmbjNOckVTeHRTV3NMal9scDZmbWI0ZVV3MWhxR1lsaUlfY045TnIxVDNOVTdCejB3cmpnN294MzdRWTJSSE9kZ1JqRUFTVFlKRE9mTk9taFQ5WDVfOHBQRF9NbnpERmc4ckhDQXo0eXpKb09TLThRTU9CUVJYdDRSejVsZjhuN2pVVlEyWFFvSk1nczlzLTBqRTg0dlZ0Y3BaN2VZVjlsRjJUUlFuRGRjRS1BS0xGdGhBVk9QLWxLdFlyRGY5V0lvS25KMUVUVWlLbmhTeTdBYVhyZnhKclRwc05TckxFRVc1ZHQ0bmItWWQ3NDlWYi1uQUhrUU5CSzVfeVk3UWFpT1pxVjZPN2lkY1dBNFQxQ1E5QVB4dDUwU0NoaXNfS0Uzd2YzUmljdXBURjhOV1cxQ1hGTkFGZVFOTmlIamVoZmJYX1UzX0FKazNsSW1BUE5lYTZsV3c3cmxMdlJFU1FzWXpBclE3dUFMYW1QcEpORTR6cHBRcUlaemd4NE9QcXpaOHpiblNtd3NHWWhfUm84ekR0NE5hTXJCNEROdlFPQmcxVnVwdnhUek9IMzRsTDFGTFMyaXlsR0JvY3ZKR3A3ck5VZjhtdkFkQ0lBOFhIcUR4VmJwX1Q1dXJqR2tiMXFQS1RyMVpmOWZIN212T3pEeDlla0QxODNVR3VPbzNid1lkMVJ3NE9RTk1CanpjT2pYS2hubFI4MFVuYUNYWVlFIiwiZW1haWwiOiJzZXJ2aWNlYWNjb3VudEBleGFtcGxlLm9yZyIsImF1dGgiOiJjMlZ5ZG1salpXRmpZMjkxYm5RNlpYbEthR0pIWTJsUGFVcFRWWHBKTVU1cFNYTkpiWFJ3V2tOSk5rbHNTWFJOYlhSclYxVTRNbGRzUW5CT1F6RkdWbGhvVGxaNlJYaFVlVEZVVkVkU2JWWlhlR3BaYlZwcFltMU9RMDVJYkU5VWJWSk1ZMnhyYVdaUkxtVjVTbkJqTTAxcFQybEtjbVJYU214amJUVnNaRWRXZWt3elRteGpibHB3V1RKV2FGa3lUblprVnpVd1NXbDNhV0V6Vm1sYVdFcDFXbGhTYkdONU5YQmllVGw2V2xoS01tRlhUbXhaVjA1cVlqTldkV1JET1hWWlZ6RnNZek5DYUZreVZXbFBhVXAzWWtkR2RWcFRNV2hqU0VGcFRFTktjbVJYU214amJUVnNaRWRXZWt4dGJIWk1NMDVzWTI1YWNGa3lWbWhaTWs1MlpGYzFNRXd6VG14Wk0wcHNaRU0xZFZsWE1XeEphbTlwWTBkNGFHSnRWWFJhUjFZeVRGaE9lV1JwTVdoWk1rNTJaRmMxTUV4WVVuWmhNbFoxVEZSU2VGcElXalJKYVhkcFlUTldhVnBZU25WYVdGSnNZM2sxY0dKNU9YcGFXRW95WVZkT2JGbFhUbXBpTTFaMVpFTTVlbHBZU2pKaFYwNXNURmRHYWxreU9URmlibEYxWW0xR2RGcFRTVFpKYmtKeldWYzFiRXhYVW14a2FURjZZMjVaZEZsWFRtcGlNMVoxWkVOSmMwbHRkREZaYlZaNVltMVdNRnBZVFhWaFZ6aDJZekpXZVdSdGJHcGFWMFpxV1RJNU1XSnVVWFpqTWxaNVpHMXNhbHBUTVdoWk1rNTJaRmMxTUV4dVZuQmFRMGsyU1dwbk1sbFVTbXhhVkZwclRGUkdiVTV0V1hST1IxVjZXbE14YVU1NlFUSk1WR1JwVG5wTk1VOUhSVE5aVkdkM1QwTkpjMGx1VGpGWmFVazJTVzVPTldNelVteGlWSEI2V2xoS01tRlhUbXhaVjA1cVlqTldkV1JFY0hkaVIwWjFXbE14YUdOSVFUWmpSM2hvWW0xVmRGcEhWakpNV0U1NVpHa3hhRmt5VG5aa1Z6VXdTVzR3TGtSc2FHVXhVM1JZWnpWVVNqazBXbFJaYlRNemNsRTNjelp0WjJaRFNqSXpWeTFYWkVadFdrMXlaamMwZEdOMGJWZzRkVzlPVGpZd2J6bGhYMlpPVlRGc05FdElTV0ZOUzA5WVVtSmFZemROTW1vNGJuRmljak5sTW5od00zTlJWMDkzWnpReVNESm5ZVE16ZUdGNFYwcFNNVlZRTkVkVFpsUjNiSE52YlRKRFNraHdhMVo1TldwS2NFaG1iak5PY2tWVGVIUlRWM05NYWw5c2NEWm1iV0kwWlZWM01XaHhSMWxzYVVsZlkwNDVUbkl4VkROT1ZUZENlakIzY21wbk4yOTRNemRSV1RKU1NFOWtaMUpxUlVGVFZGbEtSRTltVGs5dGFGUTVXRFZmT0hCUVJGOU5ibnBFUm1jNGNraERRWG8wZVhwS2IwOVRMVGhSVFU5Q1VWSllkRFJTZWpWc1pqaHVOMnBWVmxFeVdGRnZTazFuY3psekxUQnFSVGcwZGxaMFkzQmFOMlZaVmpsc1JqSlVVbEZ1UkdSalJTMUJTMHhHZEdoQlZrOVFMV3hMZEZseVJHWTVWMGx2UzI1S01VVlVWV2xMYm1oVGVUZEJZVmh5Wm5oS2NsUndjMDVUY2t4RlJWYzFaSFEwYm1JdFdXUTNORGxXWWkxdVFVaHJVVTVDU3pWZmVWazNVV0ZwVDFweFZqWlBOMmxrWTFkQk5GUXhRMUU1UVZCNGREVXdVME5vYVhOZlMwVXpkMll6VW1samRYQlVSamhPVjFjeFExaEdUa0ZHWlZGT1RtbElhbVZvWm1KWVgxVXpYMEZLYXpOc1NXMUJVRTVsWVRac1YzYzNjbXhNZGxKRlUxRnpXWHBCY2xFM2RVRk1ZVzFRY0VwT1JUUjZjSEJSY1VsYWVtZDRORTlRY1hwYU9IcGlibE50ZDNOSFdXaGZVbTg0ZWtSME5FNWhUWEpDTkVST2RsRlBRbWN4Vm5Wd2RuaFVlazlJTXpSc1RERkdURk15YVhsc1IwSnZZM1pLUjNBM2NrNVZaamh0ZGtGa1EwbEJPRmhJY1VSNFZtSndYMVExZFhKcVIydGlNWEZRUzFSeU1WcG1PV1pJTjIxMlQzcEVlRGxsYTBReE9ETlZSM1ZQYnpOaWQxbGtNVkozTkU5UlRrMUNhbnBqVDJwWVMyaHViRkk0TUZWdVlVTllXVmxGIn0sImltYWdlLXJlZ2lzdHJ5Lm9wZW5zaGlmdC1pbWFnZS1yZWdpc3RyeS5zdmMuY2x1c3Rlci5sb2NhbDo1MDAwIjp7InVzZXJuYW1lIjoic2VydmljZWFjY291bnQiLCJwYXNzd29yZCI6ImV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbEl0TW10a1dVODJXbEJwTkMxRlZYaE5WekV4VHkxVFRHUm1WV3hqWW1aaWJtTkNOSGxPVG1STGNsa2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKd2JHRnVaUzFoY0hBaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sWTNKbGRDNXVZVzFsSWpvaWNHeGhibVV0WkdWMkxYTnlkaTFoWTJOdmRXNTBMWFJ2YTJWdUxUUnhaSFo0SWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWJtRnRaU0k2SW5Cc1lXNWxMV1JsZGkxemNuWXRZV05qYjNWdWRDSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWeWRtbGpaUzFoWTJOdmRXNTBMblZwWkNJNklqZzJZVEpsWlRaa0xURm1ObVl0TkdVelpTMWlOekEyTFRkaU56TTFPR0UzWVRnd09DSXNJbk4xWWlJNkluTjVjM1JsYlRwelpYSjJhV05sWVdOamIzVnVkRHB3YkdGdVpTMWhjSEE2Y0d4aGJtVXRaR1YyTFhOeWRpMWhZMk52ZFc1MEluMC5EbGhlMVN0WGc1VEo5NFpUWW0zM3JRN3M2bWdmQ0oyM1ctV2RGbVpNcmY3NHRjdG1YOHVvTk42MG85YV9mTlUxbDRLSElhTUtPWFJiWmM3TTJqOG5xYnIzZTJ4cDNzUVdPd2c0MkgyZ2EzM3hheFdKUjFVUDRHU2ZUd2xzb20yQ0pIcGtWeTVqSnBIZm4zTnJFU3h0U1dzTGpfbHA2Zm1iNGVVdzFocUdZbGlJX2NOOU5yMVQzTlU3Qnowd3JqZzdveDM3UVkyUkhPZGdSakVBU1RZSkRPZk5PbWhUOVg1XzhwUERfTW56REZnOHJIQ0F6NHl6Sm9PUy04UU1PQlFSWHQ0Uno1bGY4bjdqVVZRMlhRb0pNZ3M5cy0wakU4NHZWdGNwWjdlWVY5bEYyVFJRbkRkY0UtQUtMRnRoQVZPUC1sS3RZckRmOVdJb0tuSjFFVFVpS25oU3k3QWFYcmZ4SnJUcHNOU3JMRUVXNWR0NG5iLVlkNzQ5VmItbkFIa1FOQks1X3lZN1FhaU9acVY2TzdpZGNXQTRUMUNROUFQeHQ1MFNDaGlzX0tFM3dmM1JpY3VwVEY4TldXMUNYRk5BRmVRTk5pSGplaGZiWF9VM19BSmszbEltQVBOZWE2bFd3N3JsTHZSRVNRc1l6QXJRN3VBTGFtUHBKTkU0enBwUXFJWnpneDRPUHF6Wjh6Ym5TbXdzR1loX1JvOHpEdDROYU1yQjRETnZRT0JnMVZ1cHZ4VHpPSDM0bEwxRkxTMml5bEdCb2N2SkdwN3JOVWY4bXZBZENJQThYSHFEeFZicF9UNXVyakdrYjFxUEtUcjFaZjlmSDdtdk96RHg5ZWtEMTgzVUd1T28zYndZZDFSdzRPUU5NQmp6Y09qWEtobmxSODBVbmFDWFlZRSIsImVtYWlsIjoic2VydmljZWFjY291bnRAZXhhbXBsZS5vcmciLCJhdXRoIjoiYzJWeWRtbGpaV0ZqWTI5MWJuUTZaWGxLYUdKSFkybFBhVXBUVlhwSk1VNXBTWE5KYlhSd1drTkpOa2xzU1hSTmJYUnJWMVU0TWxkc1FuQk9RekZHVmxob1RsWjZSWGhVZVRGVVZFZFNiVlpYZUdwWmJWcHBZbTFPUTA1SWJFOVViVkpNWTJ4cmFXWlJMbVY1U25Cak0wMXBUMmxLY21SWFNteGpiVFZzWkVkV2Vrd3pUbXhqYmxwd1dUSldhRmt5VG5aa1Z6VXdTV2wzYVdFelZtbGFXRXAxV2xoU2JHTjVOWEJpZVRsNldsaEtNbUZYVG14WlYwNXFZak5XZFdSRE9YVlpWekZzWXpOQ2FGa3lWV2xQYVVwM1lrZEdkVnBUTVdoalNFRnBURU5LY21SWFNteGpiVFZzWkVkV2VreHRiSFpNTTA1c1kyNWFjRmt5Vm1oWk1rNTJaRmMxTUV3elRteFpNMHBzWkVNMWRWbFhNV3hKYW05cFkwZDRhR0p0VlhSYVIxWXlURmhPZVdScE1XaFpNazUyWkZjMU1FeFlVblpoTWxaMVRGUlNlRnBJV2pSSmFYZHBZVE5XYVZwWVNuVmFXRkpzWTNrMWNHSjVPWHBhV0VveVlWZE9iRmxYVG1waU0xWjFaRU01ZWxwWVNqSmhWMDVzVEZkR2Fsa3lPVEZpYmxGMVltMUdkRnBUU1RaSmJrSnpXVmMxYkV4WFVteGthVEY2WTI1WmRGbFhUbXBpTTFaMVpFTkpjMGx0ZERGWmJWWjVZbTFXTUZwWVRYVmhWemgyWXpKV2VXUnRiR3BhVjBacVdUSTVNV0p1VVhaak1sWjVaRzFzYWxwVE1XaFpNazUyWkZjMU1FeHVWbkJhUTBrMlNXcG5NbGxVU214YVZGcHJURlJHYlU1dFdYUk9SMVY2V2xNeGFVNTZRVEpNVkdScFRucE5NVTlIUlROWlZHZDNUME5KYzBsdVRqRlphVWsyU1c1T05XTXpVbXhpVkhCNldsaEtNbUZYVG14WlYwNXFZak5XZFdSRWNIZGlSMFoxV2xNeGFHTklRVFpqUjNob1ltMVZkRnBIVmpKTVdFNTVaR2t4YUZreVRuWmtWelV3U1c0d0xrUnNhR1V4VTNSWVp6VlVTamswV2xSWmJUTXpjbEUzY3padFoyWkRTakl6VnkxWFpFWnRXazF5WmpjMGRHTjBiVmc0ZFc5T1RqWXdiemxoWDJaT1ZURnNORXRJU1dGTlMwOVlVbUphWXpkTk1tbzRibkZpY2pObE1uaHdNM05SVjA5M1p6UXlTREpuWVRNemVHRjRWMHBTTVZWUU5FZFRabFIzYkhOdmJUSkRTa2h3YTFaNU5XcEtjRWhtYmpOT2NrVlRlSFJUVjNOTWFsOXNjRFptYldJMFpWVjNNV2h4UjFsc2FVbGZZMDQ1VG5JeFZETk9WVGRDZWpCM2NtcG5OMjk0TXpkUldUSlNTRTlrWjFKcVJVRlRWRmxLUkU5bVRrOXRhRlE1V0RWZk9IQlFSRjlOYm5wRVJtYzRja2hEUVhvMGVYcEtiMDlUTFRoUlRVOUNVVkpZZERSU2VqVnNaamh1TjJwVlZsRXlXRkZ2U2sxbmN6bHpMVEJxUlRnMGRsWjBZM0JhTjJWWlZqbHNSakpVVWxGdVJHUmpSUzFCUzB4R2RHaEJWazlRTFd4TGRGbHlSR1k1VjBsdlMyNUtNVVZVVldsTGJtaFRlVGRCWVZoeVpuaEtjbFJ3YzA1VGNreEZSVmMxWkhRMGJtSXRXV1EzTkRsV1lpMXVRVWhyVVU1Q1N6VmZlVmszVVdGcFQxcHhWalpQTjJsa1kxZEJORlF4UTFFNVFWQjRkRFV3VTBOb2FYTmZTMFV6ZDJZelVtbGpkWEJVUmpoT1YxY3hRMWhHVGtGR1pWRk9UbWxJYW1Wb1ptSllYMVV6WDBGS2F6TnNTVzFCVUU1bFlUWnNWM2MzY214TWRsSkZVMUZ6V1hwQmNsRTNkVUZNWVcxUWNFcE9SVFI2Y0hCUmNVbGFlbWQ0TkU5UWNYcGFPSHBpYmxOdGQzTkhXV2hmVW04NGVrUjBORTVoVFhKQ05FUk9kbEZQUW1jeFZuVndkbmhVZWs5SU16UnNUREZHVEZNeWFYbHNSMEp2WTNaS1IzQTNjazVWWmpodGRrRmtRMGxCT0ZoSWNVUjRWbUp3WDFRMWRYSnFSMnRpTVhGUVMxUnlNVnBtT1daSU4yMTJUM3BFZURsbGEwUXhPRE5WUjNWUGJ6TmlkMWxrTVZKM05FOVJUazFDYW5walQycFlTMmh1YkZJNE1GVnVZVU5ZV1ZsRiJ9LCJpbWFnZS1yZWdpc3RyeS5vcGVuc2hpZnQtaW1hZ2UtcmVnaXN0cnkuc3ZjOjUwMDAiOnsidXNlcm5hbWUiOiJzZXJ2aWNlYWNjb3VudCIsInBhc3N3b3JkIjoiZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklsSXRNbXRrV1U4MldsQnBOQzFGVlhoTlZ6RXhUeTFUVEdSbVZXeGpZbVppYm1OQ05IbE9UbVJMY2xraWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp3YkdGdVpTMWhjSEFpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pY0d4aGJtVXRaR1YyTFhOeWRpMWhZMk52ZFc1MExYUnZhMlZ1TFRSeFpIWjRJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpYSjJhV05sTFdGalkyOTFiblF1Ym1GdFpTSTZJbkJzWVc1bExXUmxkaTF6Y25ZdFlXTmpiM1Z1ZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SWpnMllUSmxaVFprTFRGbU5tWXROR1V6WlMxaU56QTJMVGRpTnpNMU9HRTNZVGd3T0NJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHdiR0Z1WlMxaGNIQTZjR3hoYm1VdFpHVjJMWE55ZGkxaFkyTnZkVzUwSW4wLkRsaGUxU3RYZzVUSjk0WlRZbTMzclE3czZtZ2ZDSjIzVy1XZEZtWk1yZjc0dGN0bVg4dW9OTjYwbzlhX2ZOVTFsNEtISWFNS09YUmJaYzdNMmo4bnFicjNlMnhwM3NRV093ZzQySDJnYTMzeGF4V0pSMVVQNEdTZlR3bHNvbTJDSkhwa1Z5NWpKcEhmbjNOckVTeHRTV3NMal9scDZmbWI0ZVV3MWhxR1lsaUlfY045TnIxVDNOVTdCejB3cmpnN294MzdRWTJSSE9kZ1JqRUFTVFlKRE9mTk9taFQ5WDVfOHBQRF9NbnpERmc4ckhDQXo0eXpKb09TLThRTU9CUVJYdDRSejVsZjhuN2pVVlEyWFFvSk1nczlzLTBqRTg0dlZ0Y3BaN2VZVjlsRjJUUlFuRGRjRS1BS0xGdGhBVk9QLWxLdFlyRGY5V0lvS25KMUVUVWlLbmhTeTdBYVhyZnhKclRwc05TckxFRVc1ZHQ0bmItWWQ3NDlWYi1uQUhrUU5CSzVfeVk3UWFpT1pxVjZPN2lkY1dBNFQxQ1E5QVB4dDUwU0NoaXNfS0Uzd2YzUmljdXBURjhOV1cxQ1hGTkFGZVFOTmlIamVoZmJYX1UzX0FKazNsSW1BUE5lYTZsV3c3cmxMdlJFU1FzWXpBclE3dUFMYW1QcEpORTR6cHBRcUlaemd4NE9QcXpaOHpiblNtd3NHWWhfUm84ekR0NE5hTXJCNEROdlFPQmcxVnVwdnhUek9IMzRsTDFGTFMyaXlsR0JvY3ZKR3A3ck5VZjhtdkFkQ0lBOFhIcUR4VmJwX1Q1dXJqR2tiMXFQS1RyMVpmOWZIN212T3pEeDlla0QxODNVR3VPbzNid1lkMVJ3NE9RTk1CanpjT2pYS2hubFI4MFVuYUNYWVlFIiwiZW1haWwiOiJzZXJ2aWNlYWNjb3VudEBleGFtcGxlLm9yZyIsImF1dGgiOiJjMlZ5ZG1salpXRmpZMjkxYm5RNlpYbEthR0pIWTJsUGFVcFRWWHBKTVU1cFNYTkpiWFJ3V2tOSk5rbHNTWFJOYlhSclYxVTRNbGRzUW5CT1F6RkdWbGhvVGxaNlJYaFVlVEZVVkVkU2JWWlhlR3BaYlZwcFltMU9RMDVJYkU5VWJWSk1ZMnhyYVdaUkxtVjVTbkJqTTAxcFQybEtjbVJYU214amJUVnNaRWRXZWt3elRteGpibHB3V1RKV2FGa3lUblprVnpVd1NXbDNhV0V6Vm1sYVdFcDFXbGhTYkdONU5YQmllVGw2V2xoS01tRlhUbXhaVjA1cVlqTldkV1JET1hWWlZ6RnNZek5DYUZreVZXbFBhVXAzWWtkR2RWcFRNV2hqU0VGcFRFTktjbVJYU214amJUVnNaRWRXZWt4dGJIWk1NMDVzWTI1YWNGa3lWbWhaTWs1MlpGYzFNRXd6VG14Wk0wcHNaRU0xZFZsWE1XeEphbTlwWTBkNGFHSnRWWFJhUjFZeVRGaE9lV1JwTVdoWk1rNTJaRmMxTUV4WVVuWmhNbFoxVEZSU2VGcElXalJKYVhkcFlUTldhVnBZU25WYVdGSnNZM2sxY0dKNU9YcGFXRW95WVZkT2JGbFhUbXBpTTFaMVpFTTVlbHBZU2pKaFYwNXNURmRHYWxreU9URmlibEYxWW0xR2RGcFRTVFpKYmtKeldWYzFiRXhYVW14a2FURjZZMjVaZEZsWFRtcGlNMVoxWkVOSmMwbHRkREZaYlZaNVltMVdNRnBZVFhWaFZ6aDJZekpXZVdSdGJHcGFWMFpxV1RJNU1XSnVVWFpqTWxaNVpHMXNhbHBUTVdoWk1rNTJaRmMxTUV4dVZuQmFRMGsyU1dwbk1sbFVTbXhhVkZwclRGUkdiVTV0V1hST1IxVjZXbE14YVU1NlFUSk1WR1JwVG5wTk1VOUhSVE5aVkdkM1QwTkpjMGx1VGpGWmFVazJTVzVPTldNelVteGlWSEI2V2xoS01tRlhUbXhaVjA1cVlqTldkV1JFY0hkaVIwWjFXbE14YUdOSVFUWmpSM2hvWW0xVmRGcEhWakpNV0U1NVpHa3hhRmt5VG5aa1Z6VXdTVzR3TGtSc2FHVXhVM1JZWnpWVVNqazBXbFJaYlRNemNsRTNjelp0WjJaRFNqSXpWeTFYWkVadFdrMXlaamMwZEdOMGJWZzRkVzlPVGpZd2J6bGhYMlpPVlRGc05FdElTV0ZOUzA5WVVtSmFZemROTW1vNGJuRmljak5sTW5od00zTlJWMDkzWnpReVNESm5ZVE16ZUdGNFYwcFNNVlZRTkVkVFpsUjNiSE52YlRKRFNraHdhMVo1TldwS2NFaG1iak5PY2tWVGVIUlRWM05NYWw5c2NEWm1iV0kwWlZWM01XaHhSMWxzYVVsZlkwNDVUbkl4VkROT1ZUZENlakIzY21wbk4yOTRNemRSV1RKU1NFOWtaMUpxUlVGVFZGbEtSRTltVGs5dGFGUTVXRFZmT0hCUVJGOU5ibnBFUm1jNGNraERRWG8wZVhwS2IwOVRMVGhSVFU5Q1VWSllkRFJTZWpWc1pqaHVOMnBWVmxFeVdGRnZTazFuY3psekxUQnFSVGcwZGxaMFkzQmFOMlZaVmpsc1JqSlVVbEZ1UkdSalJTMUJTMHhHZEdoQlZrOVFMV3hMZEZseVJHWTVWMGx2UzI1S01VVlVWV2xMYm1oVGVUZEJZVmh5Wm5oS2NsUndjMDVUY2t4RlJWYzFaSFEwYm1JdFdXUTNORGxXWWkxdVFVaHJVVTVDU3pWZmVWazNVV0ZwVDFweFZqWlBOMmxrWTFkQk5GUXhRMUU1UVZCNGREVXdVME5vYVhOZlMwVXpkMll6VW1samRYQlVSamhPVjFjeFExaEdUa0ZHWlZGT1RtbElhbVZvWm1KWVgxVXpYMEZLYXpOc1NXMUJVRTVsWVRac1YzYzNjbXhNZGxKRlUxRnpXWHBCY2xFM2RVRk1ZVzFRY0VwT1JUUjZjSEJSY1VsYWVtZDRORTlRY1hwYU9IcGlibE50ZDNOSFdXaGZVbTg0ZWtSME5FNWhUWEpDTkVST2RsRlBRbWN4Vm5Wd2RuaFVlazlJTXpSc1RERkdURk15YVhsc1IwSnZZM1pLUjNBM2NrNVZaamh0ZGtGa1EwbEJPRmhJY1VSNFZtSndYMVExZFhKcVIydGlNWEZRUzFSeU1WcG1PV1pJTjIxMlQzcEVlRGxsYTBReE9ETlZSM1ZQYnpOaWQxbGtNVkozTkU5UlRrMUNhbnBqVDJwWVMyaHViRkk0TUZWdVlVTllXVmxGIn19
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: plane-dev-srv-account
      kubernetes.io/service-account.uid: 86a2ee6d-1f6f-4e3e-b706-7b7358a7a808
      openshift.io/token-secret.name: plane-dev-srv-account-token-4qdvx
      openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IlItMmtkWU82WlBpNC1FVXhNVzExTy1TTGRmVWxjYmZibmNCNHlOTmRLclkifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJwbGFuZS1hcHAiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoicGxhbmUtZGV2LXNydi1hY2NvdW50LXRva2VuLTRxZHZ4Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6InBsYW5lLWRldi1zcnYtYWNjb3VudCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6Ijg2YTJlZTZkLTFmNmYtNGUzZS1iNzA2LTdiNzM1OGE3YTgwOCIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpwbGFuZS1hcHA6cGxhbmUtZGV2LXNydi1hY2NvdW50In0.Dlhe1StXg5TJ94ZTYm33rQ7s6mgfCJ23W-WdFmZMrf74tctmX8uoNN60o9a_fNU1l4KHIaMKOXRbZc7M2j8nqbr3e2xp3sQWOwg42H2ga33xaxWJR1UP4GSfTwlsom2CJHpkVy5jJpHfn3NrESxtSWsLj_lp6fmb4eUw1hqGYliI_cN9Nr1T3NU7Bz0wrjg7ox37QY2RHOdgRjEASTYJDOfNOmhT9X5_8pPD_MnzDFg8rHCAz4yzJoOS-8QMOBQRXt4Rz5lf8n7jUVQ2XQoJMgs9s-0jE84vVtcpZ7eYV9lF2TRQnDdcE-AKLFthAVOP-lKtYrDf9WIoKnJ1ETUiKnhSy7AaXrfxJrTpsNSrLEEW5dt4nb-Yd749Vb-nAHkQNBK5_yY7QaiOZqV6O7idcWA4T1CQ9APxt50SChis_KE3wf3RicupTF8NWW1CXFNAFeQNNiHjehfbX_U3_AJk3lImAPNea6lWw7rlLvRESQsYzArQ7uALamPpJNE4zppQqIZzgx4OPqzZ8zbnSmwsGYh_Ro8zDt4NaMrB4DNvQOBg1VupvxTzOH34lL1FLS2iylGBocvJGp7rNUf8mvAdCIA8XHqDxVbp_T5urjGkb1qPKTr1Zf9fH7mvOzDx9ekD183UGuOo3bwYd1Rw4OQNMBjzcOjXKhnlR80UnaCXYYE
    creationTimestamp: "2024-10-12T14:07:59Z"
    name: plane-dev-srv-account-dockercfg-l4z9g
    namespace: plane-app
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: plane-dev-srv-account-token-4qdvx
      uid: b66f54ea-6a41-4001-b734-acd957a6ae1a
    resourceVersion: "968705"
    uid: 9ef122a4-4f5f-43b5-9ebe-cd3f28602531
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: cGxhbmUtYXBw
    service-ca.crt: 
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklsSXRNbXRrV1U4MldsQnBOQzFGVlhoTlZ6RXhUeTFUVEdSbVZXeGpZbVppYm1OQ05IbE9UbVJMY2xraWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp3YkdGdVpTMWhjSEFpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pY0d4aGJtVXRaR1YyTFhOeWRpMWhZMk52ZFc1MExYUnZhMlZ1TFRSeFpIWjRJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpYSjJhV05sTFdGalkyOTFiblF1Ym1GdFpTSTZJbkJzWVc1bExXUmxkaTF6Y25ZdFlXTmpiM1Z1ZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SWpnMllUSmxaVFprTFRGbU5tWXROR1V6WlMxaU56QTJMVGRpTnpNMU9HRTNZVGd3T0NJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHdiR0Z1WlMxaGNIQTZjR3hoYm1VdFpHVjJMWE55ZGkxaFkyTnZkVzUwSW4wLkRsaGUxU3RYZzVUSjk0WlRZbTMzclE3czZtZ2ZDSjIzVy1XZEZtWk1yZjc0dGN0bVg4dW9OTjYwbzlhX2ZOVTFsNEtISWFNS09YUmJaYzdNMmo4bnFicjNlMnhwM3NRV093ZzQySDJnYTMzeGF4V0pSMVVQNEdTZlR3bHNvbTJDSkhwa1Z5NWpKcEhmbjNOckVTeHRTV3NMal9scDZmbWI0ZVV3MWhxR1lsaUlfY045TnIxVDNOVTdCejB3cmpnN294MzdRWTJSSE9kZ1JqRUFTVFlKRE9mTk9taFQ5WDVfOHBQRF9NbnpERmc4ckhDQXo0eXpKb09TLThRTU9CUVJYdDRSejVsZjhuN2pVVlEyWFFvSk1nczlzLTBqRTg0dlZ0Y3BaN2VZVjlsRjJUUlFuRGRjRS1BS0xGdGhBVk9QLWxLdFlyRGY5V0lvS25KMUVUVWlLbmhTeTdBYVhyZnhKclRwc05TckxFRVc1ZHQ0bmItWWQ3NDlWYi1uQUhrUU5CSzVfeVk3UWFpT1pxVjZPN2lkY1dBNFQxQ1E5QVB4dDUwU0NoaXNfS0Uzd2YzUmljdXBURjhOV1cxQ1hGTkFGZVFOTmlIamVoZmJYX1UzX0FKazNsSW1BUE5lYTZsV3c3cmxMdlJFU1FzWXpBclE3dUFMYW1QcEpORTR6cHBRcUlaemd4NE9QcXpaOHpiblNtd3NHWWhfUm84ekR0NE5hTXJCNEROdlFPQmcxVnVwdnhUek9IMzRsTDFGTFMyaXlsR0JvY3ZKR3A3ck5VZjhtdkFkQ0lBOFhIcUR4VmJwX1Q1dXJqR2tiMXFQS1RyMVpmOWZIN212T3pEeDlla0QxODNVR3VPbzNid1lkMVJ3NE9RTk1CanpjT2pYS2hubFI4MFVuYUNYWVlF
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: plane-dev-srv-account
      kubernetes.io/service-account.uid: 86a2ee6d-1f6f-4e3e-b706-7b7358a7a808
    creationTimestamp: "2024-10-12T14:07:59Z"
    name: plane-dev-srv-account-token-4qdvx
    namespace: plane-app
    resourceVersion: "968688"
    uid: b66f54ea-6a41-4001-b734-acd957a6ae1a
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    release: 
  kind: Secret
  metadata:
    creationTimestamp: "2024-10-12T14:07:59Z"
    labels:
      modifiedAt: "1728742080"
      name: plane-dev
      owner: helm
      status: deployed
      version: "1"
    name: sh.helm.release.v1.plane-dev.v1
    namespace: plane-app
    resourceVersion: "968827"
    uid: 2b12467a-5e64-4c5e-b422-bfd243f66465
  type: helm.sh/release.v1
kind: List
metadata:
  resourceVersion: ""

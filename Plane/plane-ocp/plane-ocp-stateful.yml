apiVersion: v1
items:
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: plane-dev
      meta.helm.sh/release-namespace: plane-app
    creationTimestamp: "2024-10-12T14:07:59Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: plane-dev-minio-wl
    namespace: plane-app
    resourceVersion: "968924"
    uid: 4c7a50be-3c8e-4434-905e-d164af0192eb
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.name: plane-app-plane-dev-minio
    serviceName: plane-dev-minio
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.name: plane-app-plane-dev-minio
      spec:
        containers:
        - args:
          - server
          - /data
          - --console-address
          - :9090
          envFrom:
          - configMapRef:
              name: plane-dev-doc-store-vars
              optional: false
          - secretRef:
              name: plane-dev-doc-store-secrets
              optional: false
          image: quay.io/p_lokanath/minio:latest
          imagePullPolicy: IfNotPresent
          name: plane-dev-minio
          resources: {}
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
          volumeMounts:
          - mountPath: /data
            name: pvc-plane-dev-minio-vol
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: plane-dev-srv-account
        serviceAccountName: plane-dev-srv-account
        terminationGracePeriodSeconds: 30
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: pvc-plane-dev-minio-vol
        namespace: plane-app
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: nfs-storage
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: plane-dev-minio-wl-f655879ff
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: plane-dev-minio-wl-f655879ff
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: plane-dev
      meta.helm.sh/release-namespace: plane-app
    creationTimestamp: "2024-10-12T14:07:59Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: plane-dev-pgdb-wl
    namespace: plane-app
    resourceVersion: "968915"
    uid: ee823685-d5d3-4ee1-b74a-9e018cb5c602
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.name: plane-app-plane-dev-pgdb
    serviceName: plane-dev-pgdb
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.name: plane-app-plane-dev-pgdb
      spec:
        containers:
        - env:
          - name: PGDATA
            value: /var/lib/postgresql/data/plane
          envFrom:
          - configMapRef:
              name: plane-dev-pgdb-vars
              optional: false
          - secretRef:
              name: plane-dev-pgdb-secrets
              optional: false
          image: quay.io/p_lokanath/postgres:16-alpine
          imagePullPolicy: IfNotPresent
          name: plane-dev-pgdb
          resources: {}
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: pvc-plane-dev-pgdb-vol
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: plane-dev-srv-account
        serviceAccountName: plane-dev-srv-account
        terminationGracePeriodSeconds: 30
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: pvc-plane-dev-pgdb-vol
        namespace: plane-app
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: nfs-storage
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: plane-dev-pgdb-wl-57bddcf494
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: plane-dev-pgdb-wl-57bddcf494
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: plane-dev
      meta.helm.sh/release-namespace: plane-app
    creationTimestamp: "2024-10-12T14:07:59Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: plane-dev-rabbitmq-wl
    namespace: plane-app
    resourceVersion: "968952"
    uid: 5ca1be55-cf89-46a7-bf04-9c6ca01b970e
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.name: plane-app-plane-dev-rabbitmq
    serviceName: plane-dev-rabbitmq
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.name: plane-app-plane-dev-rabbitmq
      spec:
        containers:
        - envFrom:
          - secretRef:
              name: plane-dev-rabbitmq-secrets
              optional: false
          image: quay.io/p_lokanath/rabbitmq:3.13.6-management-alpine
          imagePullPolicy: IfNotPresent
          name: plane-dev-rabbitmq
          resources: {}
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
          volumeMounts:
          - mountPath: /var/lib/rabbitmq
            name: pvc-plane-dev-rabbitmq-vol
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: plane-dev-srv-account
        serviceAccountName: plane-dev-srv-account
        terminationGracePeriodSeconds: 30
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: pvc-plane-dev-rabbitmq-vol
        namespace: plane-app
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 100Mi
        storageClassName: nfs-storage
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: plane-dev-rabbitmq-wl-54c58f7497
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: plane-dev-rabbitmq-wl-54c58f7497
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: plane-dev
      meta.helm.sh/release-namespace: plane-app
    creationTimestamp: "2024-10-12T14:07:59Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: plane-dev-redis-wl
    namespace: plane-app
    resourceVersion: "968920"
    uid: 049c2657-bf25-4b75-9705-1a3cfee250a9
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.name: plane-app-plane-dev-redis
    serviceName: plane-dev-redis
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.name: plane-app-plane-dev-redis
      spec:
        containers:
        - image: valkey/valkey:7.2.5-alpine
          imagePullPolicy: IfNotPresent
          name: plane-dev-redis
          resources: {}
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
          volumeMounts:
          - mountPath: /data
            name: pvc-plane-dev-redis-vol
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: plane-dev-srv-account
        serviceAccountName: plane-dev-srv-account
        terminationGracePeriodSeconds: 30
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: pvc-plane-dev-redis-vol
        namespace: plane-app
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 100Mi
        storageClassName: nfs-storage
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: plane-dev-redis-wl-7f4d8b5644
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: plane-dev-redis-wl-7f4d8b5644
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
